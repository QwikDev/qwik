{
  "id": "qwik-optimizer",
  "package": "@builder.io/qwik/optimizer",
  "members": [
    {
      "name": "basename",
      "id": "path-basename",
      "hierarchy": [
        {
          "name": "Path",
          "id": "path-basename"
        },
        {
          "name": "basename",
          "id": "path-basename"
        }
      ],
      "kind": "MethodSignature",
      "content": "```typescript\nbasename(path: string, ext?: string): string;\n```\n\n\n<table><thead><tr><th>\n\nParameter\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\npath\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\next\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n</tbody></table>\n**Returns:**\n\nstring",
      "mdFile": "qwik.path.basename.md"
    },
    {
      "name": "ComponentEntryStrategy",
      "id": "componententrystrategy",
      "hierarchy": [
        {
          "name": "ComponentEntryStrategy",
          "id": "componententrystrategy"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface ComponentEntryStrategy \n```\n\n\n<table><thead><tr><th>\n\nProperty\n\n\n</th><th>\n\nModifiers\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\n[manual?](#)\n\n\n</td><td>\n\n\n</td><td>\n\nRecord&lt;string, string&gt;\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n<tr><td>\n\n[type](#)\n\n\n</td><td>\n\n\n</td><td>\n\n'component'\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/types.ts",
      "mdFile": "qwik.componententrystrategy.md"
    },
    {
      "name": "createOptimizer",
      "id": "createoptimizer",
      "hierarchy": [
        {
          "name": "createOptimizer",
          "id": "createoptimizer"
        }
      ],
      "kind": "Function",
      "content": "```typescript\ncreateOptimizer: (optimizerOptions?: OptimizerOptions) => Promise<Optimizer>\n```\n\n\n<table><thead><tr><th>\n\nParameter\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\noptimizerOptions\n\n\n</td><td>\n\n[OptimizerOptions](#optimizeroptions)\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n</tbody></table>\n**Returns:**\n\nPromise&lt;[Optimizer](#optimizer)<!-- -->&gt;",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/optimizer.ts",
      "mdFile": "qwik.createoptimizer.md"
    },
    {
      "name": "Diagnostic",
      "id": "diagnostic",
      "hierarchy": [
        {
          "name": "Diagnostic",
          "id": "diagnostic"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface Diagnostic \n```\n\n\n<table><thead><tr><th>\n\nProperty\n\n\n</th><th>\n\nModifiers\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\n[category](#)\n\n\n</td><td>\n\n\n</td><td>\n\n[DiagnosticCategory](#diagnosticcategory)\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[code](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring \\| null\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[file](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[highlights](#)\n\n\n</td><td>\n\n\n</td><td>\n\n[SourceLocation](#sourcelocation)<!-- -->\\[\\]\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[message](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[scope](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[suggestions](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring\\[\\] \\| null\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/types.ts",
      "mdFile": "qwik.diagnostic.md"
    },
    {
      "name": "DiagnosticCategory",
      "id": "diagnosticcategory",
      "hierarchy": [
        {
          "name": "DiagnosticCategory",
          "id": "diagnosticcategory"
        }
      ],
      "kind": "TypeAlias",
      "content": "```typescript\nexport type DiagnosticCategory = 'error' | 'warning' | 'sourceError';\n```",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/types.ts",
      "mdFile": "qwik.diagnosticcategory.md"
    },
    {
      "name": "dirname",
      "id": "path-dirname",
      "hierarchy": [
        {
          "name": "Path",
          "id": "path-dirname"
        },
        {
          "name": "dirname",
          "id": "path-dirname"
        }
      ],
      "kind": "MethodSignature",
      "content": "```typescript\ndirname(path: string): string;\n```\n\n\n<table><thead><tr><th>\n\nParameter\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\npath\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>\n**Returns:**\n\nstring",
      "mdFile": "qwik.path.dirname.md"
    },
    {
      "name": "EntryStrategy",
      "id": "entrystrategy",
      "hierarchy": [
        {
          "name": "EntryStrategy",
          "id": "entrystrategy"
        }
      ],
      "kind": "TypeAlias",
      "content": "```typescript\nexport type EntryStrategy = InlineEntryStrategy | HoistEntryStrategy | SingleEntryStrategy | HookEntryStrategy | ComponentEntryStrategy | SmartEntryStrategy;\n```\n**References:** [InlineEntryStrategy](#inlineentrystrategy)<!-- -->, [SingleEntryStrategy](#singleentrystrategy)<!-- -->, [HookEntryStrategy](#hookentrystrategy)<!-- -->, [ComponentEntryStrategy](#componententrystrategy)<!-- -->, [SmartEntryStrategy](#smartentrystrategy)",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/types.ts",
      "mdFile": "qwik.entrystrategy.md"
    },
    {
      "name": "extname",
      "id": "path-extname",
      "hierarchy": [
        {
          "name": "Path",
          "id": "path-extname"
        },
        {
          "name": "extname",
          "id": "path-extname"
        }
      ],
      "kind": "MethodSignature",
      "content": "```typescript\nextname(path: string): string;\n```\n\n\n<table><thead><tr><th>\n\nParameter\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\npath\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>\n**Returns:**\n\nstring",
      "mdFile": "qwik.path.extname.md"
    },
    {
      "name": "format",
      "id": "path-format",
      "hierarchy": [
        {
          "name": "Path",
          "id": "path-format"
        },
        {
          "name": "format",
          "id": "path-format"
        }
      ],
      "kind": "MethodSignature",
      "content": "```typescript\nformat(pathObject: {\n        root: string;\n        dir: string;\n        base: string;\n        ext: string;\n        name: string;\n    }): string;\n```\n\n\n<table><thead><tr><th>\n\nParameter\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\npathObject\n\n\n</td><td>\n\n{ root: string; dir: string; base: string; ext: string; name: string; }\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>\n**Returns:**\n\nstring",
      "mdFile": "qwik.path.format.md"
    },
    {
      "name": "GlobalInjections",
      "id": "globalinjections",
      "hierarchy": [
        {
          "name": "GlobalInjections",
          "id": "globalinjections"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface GlobalInjections \n```\n\n\n<table><thead><tr><th>\n\nProperty\n\n\n</th><th>\n\nModifiers\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\n[attributes?](#)\n\n\n</td><td>\n\n\n</td><td>\n\n{ \\[key: string\\]: string; }\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n<tr><td>\n\n[location](#)\n\n\n</td><td>\n\n\n</td><td>\n\n'head' \\| 'body'\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[tag](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/types.ts",
      "mdFile": "qwik.globalinjections.md"
    },
    {
      "name": "HookAnalysis",
      "id": "hookanalysis",
      "hierarchy": [
        {
          "name": "HookAnalysis",
          "id": "hookanalysis"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface HookAnalysis \n```\n\n\n<table><thead><tr><th>\n\nProperty\n\n\n</th><th>\n\nModifiers\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\n[canonicalFilename](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[captures](#)\n\n\n</td><td>\n\n\n</td><td>\n\nboolean\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[ctxKind](#)\n\n\n</td><td>\n\n\n</td><td>\n\n'event' \\| 'function'\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[ctxName](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[displayName](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[entry](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring \\| null\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[extension](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[hash](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[loc](#)\n\n\n</td><td>\n\n\n</td><td>\n\n\\[number, number\\]\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[name](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[origin](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[parent](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring \\| null\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/types.ts",
      "mdFile": "qwik.hookanalysis.md"
    },
    {
      "name": "HookEntryStrategy",
      "id": "hookentrystrategy",
      "hierarchy": [
        {
          "name": "HookEntryStrategy",
          "id": "hookentrystrategy"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface HookEntryStrategy \n```\n\n\n<table><thead><tr><th>\n\nProperty\n\n\n</th><th>\n\nModifiers\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\n[manual?](#)\n\n\n</td><td>\n\n\n</td><td>\n\nRecord&lt;string, string&gt;\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n<tr><td>\n\n[type](#)\n\n\n</td><td>\n\n\n</td><td>\n\n'hook'\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/types.ts",
      "mdFile": "qwik.hookentrystrategy.md"
    },
    {
      "name": "InlineEntryStrategy",
      "id": "inlineentrystrategy",
      "hierarchy": [
        {
          "name": "InlineEntryStrategy",
          "id": "inlineentrystrategy"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface InlineEntryStrategy \n```\n\n\n<table><thead><tr><th>\n\nProperty\n\n\n</th><th>\n\nModifiers\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\n[type](#)\n\n\n</td><td>\n\n\n</td><td>\n\n'inline'\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/types.ts",
      "mdFile": "qwik.inlineentrystrategy.md"
    },
    {
      "name": "InsightManifest",
      "id": "insightmanifest",
      "hierarchy": [
        {
          "name": "InsightManifest",
          "id": "insightmanifest"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface InsightManifest \n```\n\n\n<table><thead><tr><th>\n\nProperty\n\n\n</th><th>\n\nModifiers\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\n[manual](#)\n\n\n</td><td>\n\n\n</td><td>\n\nRecord&lt;string, string&gt;\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[prefetch](#)\n\n\n</td><td>\n\n\n</td><td>\n\n{ route: string; symbols: string\\[\\]; }\\[\\]\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[type](#)\n\n\n</td><td>\n\n\n</td><td>\n\n'smart'\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/types.ts",
      "mdFile": "qwik.insightmanifest.md"
    },
    {
      "name": "isAbsolute",
      "id": "path-isabsolute",
      "hierarchy": [
        {
          "name": "Path",
          "id": "path-isabsolute"
        },
        {
          "name": "isAbsolute",
          "id": "path-isabsolute"
        }
      ],
      "kind": "MethodSignature",
      "content": "```typescript\nisAbsolute(path: string): boolean;\n```\n\n\n<table><thead><tr><th>\n\nParameter\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\npath\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>\n**Returns:**\n\nboolean",
      "mdFile": "qwik.path.isabsolute.md"
    },
    {
      "name": "join",
      "id": "path-join",
      "hierarchy": [
        {
          "name": "Path",
          "id": "path-join"
        },
        {
          "name": "join",
          "id": "path-join"
        }
      ],
      "kind": "MethodSignature",
      "content": "```typescript\njoin(...paths: string[]): string;\n```\n\n\n<table><thead><tr><th>\n\nParameter\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\npaths\n\n\n</td><td>\n\nstring\\[\\]\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>\n**Returns:**\n\nstring",
      "mdFile": "qwik.path.join.md"
    },
    {
      "name": "MinifyMode",
      "id": "minifymode",
      "hierarchy": [
        {
          "name": "MinifyMode",
          "id": "minifymode"
        }
      ],
      "kind": "TypeAlias",
      "content": "```typescript\nexport type MinifyMode = 'simplify' | 'none';\n```",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/types.ts",
      "mdFile": "qwik.minifymode.md"
    },
    {
      "name": "normalize",
      "id": "path-normalize",
      "hierarchy": [
        {
          "name": "Path",
          "id": "path-normalize"
        },
        {
          "name": "normalize",
          "id": "path-normalize"
        }
      ],
      "kind": "MethodSignature",
      "content": "```typescript\nnormalize(path: string): string;\n```\n\n\n<table><thead><tr><th>\n\nParameter\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\npath\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>\n**Returns:**\n\nstring",
      "mdFile": "qwik.path.normalize.md"
    },
    {
      "name": "Optimizer",
      "id": "optimizer",
      "hierarchy": [
        {
          "name": "Optimizer",
          "id": "optimizer"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface Optimizer \n```\n\n\n<table><thead><tr><th>\n\nProperty\n\n\n</th><th>\n\nModifiers\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\n[sys](#)\n\n\n</td><td>\n\n\n</td><td>\n\n[OptimizerSystem](#optimizersystem)\n\n\n</td><td>\n\nOptimizer system use. This can be updated with a custom file system.\n\n\n</td></tr>\n</tbody></table>\n\n\n<table><thead><tr><th>\n\nMethod\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\n[transformFs(opts)](#optimizer-transformfs)\n\n\n</td><td>\n\nTransforms the directory from the file system.\n\n\n</td></tr>\n<tr><td>\n\n[transformFsSync(opts)](#optimizer-transformfssync)\n\n\n</td><td>\n\nTransforms the directory from the file system.\n\n\n</td></tr>\n<tr><td>\n\n[transformModules(opts)](#optimizer-transformmodules)\n\n\n</td><td>\n\nTransforms the input code string, does not access the file system.\n\n\n</td></tr>\n<tr><td>\n\n[transformModulesSync(opts)](#optimizer-transformmodulessync)\n\n\n</td><td>\n\nTransforms the input code string, does not access the file system.\n\n\n</td></tr>\n</tbody></table>",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/types.ts",
      "mdFile": "qwik.optimizer.md"
    },
    {
      "name": "OptimizerOptions",
      "id": "optimizeroptions",
      "hierarchy": [
        {
          "name": "OptimizerOptions",
          "id": "optimizeroptions"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface OptimizerOptions \n```\n\n\n<table><thead><tr><th>\n\nProperty\n\n\n</th><th>\n\nModifiers\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\n[binding?](#)\n\n\n</td><td>\n\n\n</td><td>\n\nany\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n<tr><td>\n\n[inlineStylesUpToBytes?](#)\n\n\n</td><td>\n\n\n</td><td>\n\nnumber\n\n\n</td><td>\n\n_(Optional)_ Inline the global styles if they're smaller than this\n\n\n</td></tr>\n<tr><td>\n\n[sourcemap?](#)\n\n\n</td><td>\n\n\n</td><td>\n\nboolean\n\n\n</td><td>\n\n_(Optional)_ Enable sourcemaps\n\n\n</td></tr>\n<tr><td>\n\n[sys?](#)\n\n\n</td><td>\n\n\n</td><td>\n\n[OptimizerSystem](#optimizersystem)\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n</tbody></table>",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/types.ts",
      "mdFile": "qwik.optimizeroptions.md"
    },
    {
      "name": "OptimizerSystem",
      "id": "optimizersystem",
      "hierarchy": [
        {
          "name": "OptimizerSystem",
          "id": "optimizersystem"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface OptimizerSystem \n```\n\n\n<table><thead><tr><th>\n\nProperty\n\n\n</th><th>\n\nModifiers\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\n[cwd](#)\n\n\n</td><td>\n\n\n</td><td>\n\n() =&gt; string\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[dynamicImport](#)\n\n\n</td><td>\n\n\n</td><td>\n\n(path: string) =&gt; Promise&lt;any&gt;\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[env](#)\n\n\n</td><td>\n\n\n</td><td>\n\n[SystemEnvironment](#systemenvironment)\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[getInputFiles?](#)\n\n\n</td><td>\n\n\n</td><td>\n\n(rootDir: string) =&gt; Promise&lt;[TransformModuleInput](#transformmoduleinput)<!-- -->\\[\\]&gt;\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n<tr><td>\n\n[os](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[path](#)\n\n\n</td><td>\n\n\n</td><td>\n\n[Path](#path)\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[strictDynamicImport](#)\n\n\n</td><td>\n\n\n</td><td>\n\n(path: string) =&gt; Promise&lt;any&gt;\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/types.ts",
      "mdFile": "qwik.optimizersystem.md"
    },
    {
      "name": "parse",
      "id": "path-parse",
      "hierarchy": [
        {
          "name": "Path",
          "id": "path-parse"
        },
        {
          "name": "parse",
          "id": "path-parse"
        }
      ],
      "kind": "MethodSignature",
      "content": "```typescript\nparse(path: string): {\n        root: string;\n        dir: string;\n        base: string;\n        ext: string;\n        name: string;\n    };\n```\n\n\n<table><thead><tr><th>\n\nParameter\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\npath\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>\n**Returns:**\n\n{ root: string; dir: string; base: string; ext: string; name: string; }",
      "mdFile": "qwik.path.parse.md"
    },
    {
      "name": "Path",
      "id": "path",
      "hierarchy": [
        {
          "name": "Path",
          "id": "path"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface Path \n```\n\n\n<table><thead><tr><th>\n\nProperty\n\n\n</th><th>\n\nModifiers\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\n[delimiter](#)\n\n\n</td><td>\n\n`readonly`\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[posix](#)\n\n\n</td><td>\n\n`readonly`\n\n\n</td><td>\n\n[Path](#path)\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[sep](#)\n\n\n</td><td>\n\n`readonly`\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[win32](#)\n\n\n</td><td>\n\n`readonly`\n\n\n</td><td>\n\nnull\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>\n\n\n<table><thead><tr><th>\n\nMethod\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\n[basename(path, ext)](#path-basename)\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[dirname(path)](#path-dirname)\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[extname(path)](#path-extname)\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[format(pathObject)](#path-format)\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[isAbsolute(path)](#path-isabsolute)\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[join(paths)](#path-join)\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[normalize(path)](#path-normalize)\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[parse(path)](#path-parse)\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[relative(from, to)](#path-relative)\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[resolve(paths)](#path-resolve)\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/types.ts",
      "mdFile": "qwik.path.md"
    },
    {
      "name": "QwikBuildMode",
      "id": "qwikbuildmode",
      "hierarchy": [
        {
          "name": "QwikBuildMode",
          "id": "qwikbuildmode"
        }
      ],
      "kind": "TypeAlias",
      "content": "```typescript\nexport type QwikBuildMode = 'production' | 'development';\n```",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/plugins/plugin.ts",
      "mdFile": "qwik.qwikbuildmode.md"
    },
    {
      "name": "QwikBuildTarget",
      "id": "qwikbuildtarget",
      "hierarchy": [
        {
          "name": "QwikBuildTarget",
          "id": "qwikbuildtarget"
        }
      ],
      "kind": "TypeAlias",
      "content": "```typescript\nexport type QwikBuildTarget = 'client' | 'ssr' | 'lib' | 'test';\n```",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/plugins/plugin.ts",
      "mdFile": "qwik.qwikbuildtarget.md"
    },
    {
      "name": "QwikBundle",
      "id": "qwikbundle",
      "hierarchy": [
        {
          "name": "QwikBundle",
          "id": "qwikbundle"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface QwikBundle \n```\n\n\n<table><thead><tr><th>\n\nProperty\n\n\n</th><th>\n\nModifiers\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\n[dynamicImports?](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring\\[\\]\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n<tr><td>\n\n[imports?](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring\\[\\]\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n<tr><td>\n\n[origins?](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring\\[\\]\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n<tr><td>\n\n[size](#)\n\n\n</td><td>\n\n\n</td><td>\n\nnumber\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[symbols?](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring\\[\\]\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n</tbody></table>",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/types.ts",
      "mdFile": "qwik.qwikbundle.md"
    },
    {
      "name": "QwikManifest",
      "id": "qwikmanifest",
      "hierarchy": [
        {
          "name": "QwikManifest",
          "id": "qwikmanifest"
        }
      ],
      "kind": "Interface",
      "content": "The metadata of the build. One of its uses is storing where QRL symbols are located.\n\n\n```typescript\nexport interface QwikManifest \n```\n\n\n<table><thead><tr><th>\n\nProperty\n\n\n</th><th>\n\nModifiers\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\n[bundles](#)\n\n\n</td><td>\n\n\n</td><td>\n\n{ \\[fileName: string\\]: [QwikBundle](#qwikbundle)<!-- -->; }\n\n\n</td><td>\n\nAll code bundles, used to know the import graph\n\n\n</td></tr>\n<tr><td>\n\n[injections?](#)\n\n\n</td><td>\n\n\n</td><td>\n\n[GlobalInjections](#globalinjections)<!-- -->\\[\\]\n\n\n</td><td>\n\n_(Optional)_ CSS etc to inject in the document head\n\n\n</td></tr>\n<tr><td>\n\n[manifestHash](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\nContent hash of the manifest, if this changes, the code changed\n\n\n</td></tr>\n<tr><td>\n\n[mapping](#)\n\n\n</td><td>\n\n\n</td><td>\n\n{ \\[symbolName: string\\]: string; }\n\n\n</td><td>\n\nWhere QRLs are located\n\n\n</td></tr>\n<tr><td>\n\n[options?](#)\n\n\n</td><td>\n\n\n</td><td>\n\n{ target?: string; buildMode?: string; entryStrategy?: { \\[key: string\\]: any; }; }\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n<tr><td>\n\n[platform?](#)\n\n\n</td><td>\n\n\n</td><td>\n\n{ \\[name: string\\]: string; }\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n<tr><td>\n\n[symbols](#)\n\n\n</td><td>\n\n\n</td><td>\n\n{ \\[symbolName: string\\]: [QwikSymbol](#qwiksymbol)<!-- -->; }\n\n\n</td><td>\n\nQRL symbols\n\n\n</td></tr>\n<tr><td>\n\n[version](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/types.ts",
      "mdFile": "qwik.qwikmanifest.md"
    },
    {
      "name": "qwikRollup",
      "id": "qwikrollup",
      "hierarchy": [
        {
          "name": "qwikRollup",
          "id": "qwikrollup"
        }
      ],
      "kind": "Function",
      "content": "```typescript\nexport declare function qwikRollup(qwikRollupOpts?: QwikRollupPluginOptions): any;\n```\n\n\n<table><thead><tr><th>\n\nParameter\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\nqwikRollupOpts\n\n\n</td><td>\n\n[QwikRollupPluginOptions](#qwikrolluppluginoptions)\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n</tbody></table>\n**Returns:**\n\nany",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/plugins/rollup.ts",
      "mdFile": "qwik.qwikrollup.md"
    },
    {
      "name": "QwikRollupPluginOptions",
      "id": "qwikrolluppluginoptions",
      "hierarchy": [
        {
          "name": "QwikRollupPluginOptions",
          "id": "qwikrolluppluginoptions"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface QwikRollupPluginOptions \n```\n\n\n<table><thead><tr><th>\n\nProperty\n\n\n</th><th>\n\nModifiers\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\n[buildMode?](#)\n\n\n</td><td>\n\n\n</td><td>\n\n[QwikBuildMode](#qwikbuildmode)\n\n\n</td><td>\n\n_(Optional)_ Build `production` or `development`<!-- -->.\n\nDefault `development`\n\n\n</td></tr>\n<tr><td>\n\n[csr?](#)\n\n\n</td><td>\n\n\n</td><td>\n\nboolean\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n<tr><td>\n\n[debug?](#)\n\n\n</td><td>\n\n\n</td><td>\n\nboolean\n\n\n</td><td>\n\n_(Optional)_ Prints verbose Qwik plugin debug logs.\n\nDefault `false`\n\n\n</td></tr>\n<tr><td>\n\n[entryStrategy?](#)\n\n\n</td><td>\n\n\n</td><td>\n\n[EntryStrategy](#entrystrategy)\n\n\n</td><td>\n\n_(Optional)_ The Qwik entry strategy to use while building for production. During development the type is always `hook`<!-- -->.\n\nDefault `{ type: \"smart\" }`<!-- -->)\n\n\n</td></tr>\n<tr><td>\n\n[lint?](#)\n\n\n</td><td>\n\n\n</td><td>\n\nboolean\n\n\n</td><td>\n\n_(Optional)_ Run eslint on the source files for the ssr build or dev server. This can slow down startup on large projects. Defaults to `true`\n\n\n</td></tr>\n<tr><td>\n\n[manifestInput?](#)\n\n\n</td><td>\n\n\n</td><td>\n\n[QwikManifest](#qwikmanifest)\n\n\n</td><td>\n\n_(Optional)_ The SSR build requires the manifest generated during the client build. The `manifestInput` option can be used to manually provide a manifest.\n\nDefault `undefined`\n\n\n</td></tr>\n<tr><td>\n\n[manifestOutput?](#)\n\n\n</td><td>\n\n\n</td><td>\n\n(manifest: [QwikManifest](#qwikmanifest)<!-- -->) =&gt; Promise&lt;void&gt; \\| void\n\n\n</td><td>\n\n_(Optional)_ The client build will create a manifest and this hook is called with the generated build data.\n\nDefault `undefined`\n\n\n</td></tr>\n<tr><td>\n\n[optimizerOptions?](#)\n\n\n</td><td>\n\n\n</td><td>\n\n[OptimizerOptions](#optimizeroptions)\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n<tr><td>\n\n[rootDir?](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n_(Optional)_ The root of the application, which is commonly the same directory as `package.json` and `rollup.config.js`<!-- -->.\n\nDefault `process.cwd()`\n\n\n</td></tr>\n<tr><td>\n\n[srcDir?](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n_(Optional)_ The source directory to find all the Qwik components. Since Qwik does not have a single input, the `srcDir` is used to recursively find Qwik files.\n\nDefault `src`\n\n\n</td></tr>\n<tr><td>\n\n[srcInputs?](#)\n\n\n</td><td>\n\n\n</td><td>\n\n[TransformModuleInput](#transformmoduleinput)<!-- -->\\[\\] \\| null\n\n\n</td><td>\n\n_(Optional)_ Alternative to `srcDir`<!-- -->, where `srcInputs` is able to provide the files manually. This option is useful for an environment without a file system, such as a webworker.\n\nDefault: `null`\n\n\n</td></tr>\n<tr><td>\n\n[target?](#)\n\n\n</td><td>\n\n\n</td><td>\n\n[QwikBuildTarget](#qwikbuildtarget)\n\n\n</td><td>\n\n_(Optional)_ Target `client` or `ssr`<!-- -->.\n\nDefault `client`\n\n\n</td></tr>\n<tr><td>\n\n[transformedModuleOutput?](#)\n\n\n</td><td>\n\n\n</td><td>\n\n((transformedModules: [TransformModule](#transformmodule)<!-- -->\\[\\]) =&gt; Promise&lt;void&gt; \\| void) \\| null\n\n\n</td><td>\n\n_(Optional)_ Hook that's called after the build and provides all of the transformed modules that were used before bundling.\n\n\n</td></tr>\n</tbody></table>",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/plugins/rollup.ts",
      "mdFile": "qwik.qwikrolluppluginoptions.md"
    },
    {
      "name": "QwikSymbol",
      "id": "qwiksymbol",
      "hierarchy": [
        {
          "name": "QwikSymbol",
          "id": "qwiksymbol"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface QwikSymbol \n```\n\n\n<table><thead><tr><th>\n\nProperty\n\n\n</th><th>\n\nModifiers\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\n[canonicalFilename](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[captures](#)\n\n\n</td><td>\n\n\n</td><td>\n\nboolean\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[ctxKind](#)\n\n\n</td><td>\n\n\n</td><td>\n\n'function' \\| 'event'\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[ctxName](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[displayName](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[hash](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[loc](#)\n\n\n</td><td>\n\n\n</td><td>\n\n\\[number, number\\]\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[origin](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[parent](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring \\| null\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/types.ts",
      "mdFile": "qwik.qwiksymbol.md"
    },
    {
      "name": "qwikVite",
      "id": "qwikvite",
      "hierarchy": [
        {
          "name": "qwikVite",
          "id": "qwikvite"
        }
      ],
      "kind": "Function",
      "content": "```typescript\nexport declare function qwikVite(qwikViteOpts?: QwikVitePluginOptions): any;\n```\n\n\n<table><thead><tr><th>\n\nParameter\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\nqwikViteOpts\n\n\n</td><td>\n\n[QwikVitePluginOptions](#qwikvitepluginoptions)\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n</tbody></table>\n**Returns:**\n\nany",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/plugins/vite.ts",
      "mdFile": "qwik.qwikvite.md"
    },
    {
      "name": "QwikViteDevResponse",
      "id": "qwikvitedevresponse",
      "hierarchy": [
        {
          "name": "QwikViteDevResponse",
          "id": "qwikvitedevresponse"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface QwikViteDevResponse \n```\n\n\n<table><thead><tr><th>\n\nProperty\n\n\n</th><th>\n\nModifiers\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\n[\\_qwikEnvData?](#)\n\n\n</td><td>\n\n\n</td><td>\n\nRecord&lt;string, any&gt;\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n<tr><td>\n\n[\\_qwikRenderResolve?](#)\n\n\n</td><td>\n\n\n</td><td>\n\n() =&gt; void\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n</tbody></table>",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/plugins/vite.ts",
      "mdFile": "qwik.qwikvitedevresponse.md"
    },
    {
      "name": "QwikVitePlugin",
      "id": "qwikviteplugin",
      "hierarchy": [
        {
          "name": "QwikVitePlugin",
          "id": "qwikviteplugin"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface QwikVitePlugin \n```\n\n\n<table><thead><tr><th>\n\nProperty\n\n\n</th><th>\n\nModifiers\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\n[api](#)\n\n\n</td><td>\n\n\n</td><td>\n\n[QwikVitePluginApi](#qwikvitepluginapi)\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[name](#)\n\n\n</td><td>\n\n\n</td><td>\n\n'vite-plugin-qwik'\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/plugins/vite.ts",
      "mdFile": "qwik.qwikviteplugin.md"
    },
    {
      "name": "QwikVitePluginApi",
      "id": "qwikvitepluginapi",
      "hierarchy": [
        {
          "name": "QwikVitePluginApi",
          "id": "qwikvitepluginapi"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface QwikVitePluginApi \n```\n\n\n<table><thead><tr><th>\n\nProperty\n\n\n</th><th>\n\nModifiers\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\n[getAssetsDir](#)\n\n\n</td><td>\n\n\n</td><td>\n\n() =&gt; string \\| undefined\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[getClientOutDir](#)\n\n\n</td><td>\n\n\n</td><td>\n\n() =&gt; string \\| null\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[getClientPublicOutDir](#)\n\n\n</td><td>\n\n\n</td><td>\n\n() =&gt; string \\| null\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[getInsightsManifest](#)\n\n\n</td><td>\n\n\n</td><td>\n\n(clientOutDir?: string \\| null) =&gt; Promise&lt;[InsightManifest](#insightmanifest) \\| null&gt;\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[getManifest](#)\n\n\n</td><td>\n\n\n</td><td>\n\n() =&gt; [QwikManifest](#qwikmanifest) \\| null\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[getOptimizer](#)\n\n\n</td><td>\n\n\n</td><td>\n\n() =&gt; [Optimizer](#optimizer) \\| null\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[getOptions](#)\n\n\n</td><td>\n\n\n</td><td>\n\n() =&gt; NormalizedQwikPluginOptions\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[getRootDir](#)\n\n\n</td><td>\n\n\n</td><td>\n\n() =&gt; string \\| null\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/plugins/vite.ts",
      "mdFile": "qwik.qwikvitepluginapi.md"
    },
    {
      "name": "QwikVitePluginOptions",
      "id": "qwikvitepluginoptions",
      "hierarchy": [
        {
          "name": "QwikVitePluginOptions",
          "id": "qwikvitepluginoptions"
        }
      ],
      "kind": "TypeAlias",
      "content": "```typescript\nexport type QwikVitePluginOptions = QwikVitePluginCSROptions | QwikVitePluginSSROptions;\n```",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/plugins/vite.ts",
      "mdFile": "qwik.qwikvitepluginoptions.md"
    },
    {
      "name": "relative",
      "id": "path-relative",
      "hierarchy": [
        {
          "name": "Path",
          "id": "path-relative"
        },
        {
          "name": "relative",
          "id": "path-relative"
        }
      ],
      "kind": "MethodSignature",
      "content": "```typescript\nrelative(from: string, to: string): string;\n```\n\n\n<table><thead><tr><th>\n\nParameter\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\nfrom\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\nto\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>\n**Returns:**\n\nstring",
      "mdFile": "qwik.path.relative.md"
    },
    {
      "name": "resolve",
      "id": "path-resolve",
      "hierarchy": [
        {
          "name": "Path",
          "id": "path-resolve"
        },
        {
          "name": "resolve",
          "id": "path-resolve"
        }
      ],
      "kind": "MethodSignature",
      "content": "```typescript\nresolve(...paths: string[]): string;\n```\n\n\n<table><thead><tr><th>\n\nParameter\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\npaths\n\n\n</td><td>\n\nstring\\[\\]\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>\n**Returns:**\n\nstring",
      "mdFile": "qwik.path.resolve.md"
    },
    {
      "name": "ResolvedManifest",
      "id": "resolvedmanifest",
      "hierarchy": [
        {
          "name": "ResolvedManifest",
          "id": "resolvedmanifest"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface ResolvedManifest \n```\n\n\n<table><thead><tr><th>\n\nProperty\n\n\n</th><th>\n\nModifiers\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\n[manifest](#)\n\n\n</td><td>\n\n\n</td><td>\n\n[QwikManifest](#qwikmanifest)\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[mapper](#)\n\n\n</td><td>\n\n\n</td><td>\n\n[SymbolMapper](#symbolmapper)\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/types.ts",
      "mdFile": "qwik.resolvedmanifest.md"
    },
    {
      "name": "SingleEntryStrategy",
      "id": "singleentrystrategy",
      "hierarchy": [
        {
          "name": "SingleEntryStrategy",
          "id": "singleentrystrategy"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface SingleEntryStrategy \n```\n\n\n<table><thead><tr><th>\n\nProperty\n\n\n</th><th>\n\nModifiers\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\n[manual?](#)\n\n\n</td><td>\n\n\n</td><td>\n\nRecord&lt;string, string&gt;\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n<tr><td>\n\n[type](#)\n\n\n</td><td>\n\n\n</td><td>\n\n'single'\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/types.ts",
      "mdFile": "qwik.singleentrystrategy.md"
    },
    {
      "name": "SmartEntryStrategy",
      "id": "smartentrystrategy",
      "hierarchy": [
        {
          "name": "SmartEntryStrategy",
          "id": "smartentrystrategy"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface SmartEntryStrategy \n```\n\n\n<table><thead><tr><th>\n\nProperty\n\n\n</th><th>\n\nModifiers\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\n[manual?](#)\n\n\n</td><td>\n\n\n</td><td>\n\nRecord&lt;string, string&gt;\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n<tr><td>\n\n[type](#)\n\n\n</td><td>\n\n\n</td><td>\n\n'smart'\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/types.ts",
      "mdFile": "qwik.smartentrystrategy.md"
    },
    {
      "name": "SourceLocation",
      "id": "sourcelocation",
      "hierarchy": [
        {
          "name": "SourceLocation",
          "id": "sourcelocation"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface SourceLocation \n```\n\n\n<table><thead><tr><th>\n\nProperty\n\n\n</th><th>\n\nModifiers\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\n[endCol](#)\n\n\n</td><td>\n\n\n</td><td>\n\nnumber\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[endLine](#)\n\n\n</td><td>\n\n\n</td><td>\n\nnumber\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[hi](#)\n\n\n</td><td>\n\n\n</td><td>\n\nnumber\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[lo](#)\n\n\n</td><td>\n\n\n</td><td>\n\nnumber\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[startCol](#)\n\n\n</td><td>\n\n\n</td><td>\n\nnumber\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[startLine](#)\n\n\n</td><td>\n\n\n</td><td>\n\nnumber\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/types.ts",
      "mdFile": "qwik.sourcelocation.md"
    },
    {
      "name": "SourceMapsOption",
      "id": "sourcemapsoption",
      "hierarchy": [
        {
          "name": "SourceMapsOption",
          "id": "sourcemapsoption"
        }
      ],
      "kind": "TypeAlias",
      "content": "```typescript\nexport type SourceMapsOption = 'external' | 'inline' | undefined | null;\n```",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/types.ts",
      "mdFile": "qwik.sourcemapsoption.md"
    },
    {
      "name": "SymbolMapper",
      "id": "symbolmapper",
      "hierarchy": [
        {
          "name": "SymbolMapper",
          "id": "symbolmapper"
        }
      ],
      "kind": "TypeAlias",
      "content": "```typescript\nexport type SymbolMapper = Record<string, readonly [symbol: string, chunk: string]>;\n```",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/types.ts",
      "mdFile": "qwik.symbolmapper.md"
    },
    {
      "name": "SymbolMapperFn",
      "id": "symbolmapperfn",
      "hierarchy": [
        {
          "name": "SymbolMapperFn",
          "id": "symbolmapperfn"
        }
      ],
      "kind": "TypeAlias",
      "content": "```typescript\nexport type SymbolMapperFn = (symbolName: string, mapper: SymbolMapper | undefined, parent?: string) => readonly [symbol: string, chunk: string] | undefined;\n```\n**References:** [SymbolMapper](#symbolmapper)",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/types.ts",
      "mdFile": "qwik.symbolmapperfn.md"
    },
    {
      "name": "SystemEnvironment",
      "id": "systemenvironment",
      "hierarchy": [
        {
          "name": "SystemEnvironment",
          "id": "systemenvironment"
        }
      ],
      "kind": "TypeAlias",
      "content": "```typescript\nexport type SystemEnvironment = 'node' | 'deno' | 'bun' | 'webworker' | 'browsermain' | 'unknown';\n```",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/types.ts",
      "mdFile": "qwik.systemenvironment.md"
    },
    {
      "name": "transformFs",
      "id": "optimizer-transformfs",
      "hierarchy": [
        {
          "name": "Optimizer",
          "id": "optimizer-transformfs"
        },
        {
          "name": "transformFs",
          "id": "optimizer-transformfs"
        }
      ],
      "kind": "MethodSignature",
      "content": "Transforms the directory from the file system.\n\n\n```typescript\ntransformFs(opts: TransformFsOptions): Promise<TransformOutput>;\n```\n\n\n<table><thead><tr><th>\n\nParameter\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\nopts\n\n\n</td><td>\n\n[TransformFsOptions](#transformfsoptions)\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>\n**Returns:**\n\nPromise&lt;[TransformOutput](#transformoutput)<!-- -->&gt;",
      "mdFile": "qwik.optimizer.transformfs.md"
    },
    {
      "name": "TransformFsOptions",
      "id": "transformfsoptions",
      "hierarchy": [
        {
          "name": "TransformFsOptions",
          "id": "transformfsoptions"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface TransformFsOptions extends TransformOptions \n```\n**Extends:** [TransformOptions](#transformoptions)\n\n\n<table><thead><tr><th>\n\nProperty\n\n\n</th><th>\n\nModifiers\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\n[vendorRoots](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring\\[\\]\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/types.ts",
      "mdFile": "qwik.transformfsoptions.md"
    },
    {
      "name": "transformFsSync",
      "id": "optimizer-transformfssync",
      "hierarchy": [
        {
          "name": "Optimizer",
          "id": "optimizer-transformfssync"
        },
        {
          "name": "transformFsSync",
          "id": "optimizer-transformfssync"
        }
      ],
      "kind": "MethodSignature",
      "content": "Transforms the directory from the file system.\n\n\n```typescript\ntransformFsSync(opts: TransformFsOptions): TransformOutput;\n```\n\n\n<table><thead><tr><th>\n\nParameter\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\nopts\n\n\n</td><td>\n\n[TransformFsOptions](#transformfsoptions)\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>\n**Returns:**\n\n[TransformOutput](#transformoutput)",
      "mdFile": "qwik.optimizer.transformfssync.md"
    },
    {
      "name": "TransformModule",
      "id": "transformmodule",
      "hierarchy": [
        {
          "name": "TransformModule",
          "id": "transformmodule"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface TransformModule \n```\n\n\n<table><thead><tr><th>\n\nProperty\n\n\n</th><th>\n\nModifiers\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\n[code](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[hook](#)\n\n\n</td><td>\n\n\n</td><td>\n\n[HookAnalysis](#hookanalysis) \\| null\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[isEntry](#)\n\n\n</td><td>\n\n\n</td><td>\n\nboolean\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[map](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring \\| null\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[origPath](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring \\| null\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[path](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/types.ts",
      "mdFile": "qwik.transformmodule.md"
    },
    {
      "name": "TransformModuleInput",
      "id": "transformmoduleinput",
      "hierarchy": [
        {
          "name": "TransformModuleInput",
          "id": "transformmoduleinput"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface TransformModuleInput \n```\n\n\n<table><thead><tr><th>\n\nProperty\n\n\n</th><th>\n\nModifiers\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\n[code](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[path](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/types.ts",
      "mdFile": "qwik.transformmoduleinput.md"
    },
    {
      "name": "transformModules",
      "id": "optimizer-transformmodules",
      "hierarchy": [
        {
          "name": "Optimizer",
          "id": "optimizer-transformmodules"
        },
        {
          "name": "transformModules",
          "id": "optimizer-transformmodules"
        }
      ],
      "kind": "MethodSignature",
      "content": "Transforms the input code string, does not access the file system.\n\n\n```typescript\ntransformModules(opts: TransformModulesOptions): Promise<TransformOutput>;\n```\n\n\n<table><thead><tr><th>\n\nParameter\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\nopts\n\n\n</td><td>\n\n[TransformModulesOptions](#transformmodulesoptions)\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>\n**Returns:**\n\nPromise&lt;[TransformOutput](#transformoutput)<!-- -->&gt;",
      "mdFile": "qwik.optimizer.transformmodules.md"
    },
    {
      "name": "TransformModulesOptions",
      "id": "transformmodulesoptions",
      "hierarchy": [
        {
          "name": "TransformModulesOptions",
          "id": "transformmodulesoptions"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface TransformModulesOptions extends TransformOptions \n```\n**Extends:** [TransformOptions](#transformoptions)\n\n\n<table><thead><tr><th>\n\nProperty\n\n\n</th><th>\n\nModifiers\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\n[input](#)\n\n\n</td><td>\n\n\n</td><td>\n\n[TransformModuleInput](#transformmoduleinput)<!-- -->\\[\\]\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/types.ts",
      "mdFile": "qwik.transformmodulesoptions.md"
    },
    {
      "name": "transformModulesSync",
      "id": "optimizer-transformmodulessync",
      "hierarchy": [
        {
          "name": "Optimizer",
          "id": "optimizer-transformmodulessync"
        },
        {
          "name": "transformModulesSync",
          "id": "optimizer-transformmodulessync"
        }
      ],
      "kind": "MethodSignature",
      "content": "Transforms the input code string, does not access the file system.\n\n\n```typescript\ntransformModulesSync(opts: TransformModulesOptions): TransformOutput;\n```\n\n\n<table><thead><tr><th>\n\nParameter\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\nopts\n\n\n</td><td>\n\n[TransformModulesOptions](#transformmodulesoptions)\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>\n**Returns:**\n\n[TransformOutput](#transformoutput)",
      "mdFile": "qwik.optimizer.transformmodulessync.md"
    },
    {
      "name": "TransformOptions",
      "id": "transformoptions",
      "hierarchy": [
        {
          "name": "TransformOptions",
          "id": "transformoptions"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface TransformOptions \n```\n\n\n<table><thead><tr><th>\n\nProperty\n\n\n</th><th>\n\nModifiers\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\n[entryStrategy?](#)\n\n\n</td><td>\n\n\n</td><td>\n\n[EntryStrategy](#entrystrategy)\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n<tr><td>\n\n[explicitExtensions?](#)\n\n\n</td><td>\n\n\n</td><td>\n\nboolean\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n<tr><td>\n\n[isServer?](#)\n\n\n</td><td>\n\n\n</td><td>\n\nboolean\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n<tr><td>\n\n[minify?](#)\n\n\n</td><td>\n\n\n</td><td>\n\n[MinifyMode](#minifymode)\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n<tr><td>\n\n[mode?](#)\n\n\n</td><td>\n\n\n</td><td>\n\nEmitMode\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n<tr><td>\n\n[preserveFilenames?](#)\n\n\n</td><td>\n\n\n</td><td>\n\nboolean\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n<tr><td>\n\n[regCtxName?](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring\\[\\]\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n<tr><td>\n\n[rootDir?](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n<tr><td>\n\n[scope?](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n<tr><td>\n\n[sourceMaps?](#)\n\n\n</td><td>\n\n\n</td><td>\n\nboolean\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n<tr><td>\n\n[srcDir](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[stripCtxName?](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring\\[\\]\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n<tr><td>\n\n[stripEventHandlers?](#)\n\n\n</td><td>\n\n\n</td><td>\n\nboolean\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n<tr><td>\n\n[stripExports?](#)\n\n\n</td><td>\n\n\n</td><td>\n\nstring\\[\\]\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n<tr><td>\n\n[transpileJsx?](#)\n\n\n</td><td>\n\n\n</td><td>\n\nboolean\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n<tr><td>\n\n[transpileTs?](#)\n\n\n</td><td>\n\n\n</td><td>\n\nboolean\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n</tbody></table>",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/types.ts",
      "mdFile": "qwik.transformoptions.md"
    },
    {
      "name": "TransformOutput",
      "id": "transformoutput",
      "hierarchy": [
        {
          "name": "TransformOutput",
          "id": "transformoutput"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface TransformOutput \n```\n\n\n<table><thead><tr><th>\n\nProperty\n\n\n</th><th>\n\nModifiers\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\n[diagnostics](#)\n\n\n</td><td>\n\n\n</td><td>\n\n[Diagnostic](#diagnostic)<!-- -->\\[\\]\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[isJsx](#)\n\n\n</td><td>\n\n\n</td><td>\n\nboolean\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[isTypeScript](#)\n\n\n</td><td>\n\n\n</td><td>\n\nboolean\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[modules](#)\n\n\n</td><td>\n\n\n</td><td>\n\n[TransformModule](#transformmodule)<!-- -->\\[\\]\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/types.ts",
      "mdFile": "qwik.transformoutput.md"
    },
    {
      "name": "TranspileOption",
      "id": "transpileoption",
      "hierarchy": [
        {
          "name": "TranspileOption",
          "id": "transpileoption"
        }
      ],
      "kind": "TypeAlias",
      "content": "```typescript\nexport type TranspileOption = boolean | undefined | null;\n```",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/types.ts",
      "mdFile": "qwik.transpileoption.md"
    },
    {
      "name": "versions",
      "id": "versions",
      "hierarchy": [
        {
          "name": "versions",
          "id": "versions"
        }
      ],
      "kind": "Variable",
      "content": "```typescript\nversions: {\n    qwik: string;\n}\n```",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/optimizer/src/versions.ts",
      "mdFile": "qwik.versions.md"
    }
  ]
}