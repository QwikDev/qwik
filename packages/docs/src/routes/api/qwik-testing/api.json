{
  "id": "qwik-testing",
  "package": "@builder.io/qwik/testing",
  "members": [
    {
      "name": "createDOM",
      "id": "createdom",
      "hierarchy": [
        {
          "name": "createDOM",
          "id": "createdom"
        }
      ],
      "kind": "Function",
      "content": "CreatePlatform and CreateDocument\n\n\n```typescript\ncreateDOM: ({ html }?: {\n    html?: string;\n}) => Promise<{\n    render: (jsxElement: JSXOutput) => Promise<import(\"@builder.io/qwik\").RenderResult>;\n    screen: HTMLElement;\n    userEvent: (queryOrElement: string | Element | keyof HTMLElementTagNameMap | null, eventNameCamel: string | keyof WindowEventMap, eventPayload?: any) => Promise<void>;\n}>\n```\n\n\n<table><thead><tr><th>\n\nParameter\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\n{ html }\n\n\n</td><td>\n\n{ html?: string; }\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n</tbody></table>\n**Returns:**\n\nPromise&lt;{ render: (jsxElement: JSXOutput) =&gt; Promise&lt;import(\"@builder.io/qwik\").RenderResult&gt;; screen: HTMLElement; userEvent: (queryOrElement: string \\| Element \\| keyof HTMLElementTagNameMap \\| null, eventNameCamel: string \\| keyof WindowEventMap, eventPayload?: any) =&gt; Promise&lt;void&gt;; }&gt;",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/testing/library.ts",
      "mdFile": "qwik.createdom.md"
    }
  ]
}