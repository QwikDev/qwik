{
  "id": "qwik-testing",
  "package": "@qwik.dev/qwik/testing",
  "members": [
    {
      "name": "child",
      "id": "elementfixture-child",
      "hierarchy": [
        {
          "name": "ElementFixture",
          "id": "elementfixture-child"
        },
        {
          "name": "child",
          "id": "elementfixture-child"
        }
      ],
      "kind": "Property",
      "content": "```typescript\nchild: HTMLElement;\n```",
      "mdFile": "core.elementfixture.child.md"
    },
    {
      "name": "createDocument",
      "id": "createdocument",
      "hierarchy": [
        {
          "name": "createDocument",
          "id": "createdocument"
        }
      ],
      "kind": "Function",
      "content": "Create emulated `Document` for server environment. Does not implement the full browser `document` and `window` API. This api may be removed in the future.\n\n\n```typescript\nexport declare function createDocument(opts?: MockDocumentOptions): Document;\n```\n\n\n<table><thead><tr><th>\n\nParameter\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\nopts\n\n\n</td><td>\n\nMockDocumentOptions\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n</tbody></table>\n\n**Returns:**\n\nDocument",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/testing/document.ts",
      "mdFile": "core.createdocument.md"
    },
    {
      "name": "createDOM",
      "id": "createdom",
      "hierarchy": [
        {
          "name": "createDOM",
          "id": "createdom"
        }
      ],
      "kind": "Function",
      "content": "CreatePlatform and CreateDocument\n\n\n```typescript\ncreateDOM: ({ html }?: {\n    html?: string;\n}) => Promise<{\n    render: (jsxElement: JSXOutput) => Promise<import(\"@qwik.dev/core\").RenderResult>;\n    screen: HTMLElement;\n    userEvent: (queryOrElement: string | Element | keyof HTMLElementTagNameMap | null, eventNameCamel: string | keyof WindowEventMap, eventPayload?: any) => Promise<void>;\n}>\n```\n\n\n<table><thead><tr><th>\n\nParameter\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\n{ html }\n\n\n</td><td>\n\n{ html?: string; }\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n</tbody></table>\n\n**Returns:**\n\nPromise&lt;{ render: (jsxElement: JSXOutput) =&gt; Promise&lt;import(\"@qwik.dev/core\").RenderResult&gt;; screen: HTMLElement; userEvent: (queryOrElement: string \\| Element \\| keyof HTMLElementTagNameMap \\| null, eventNameCamel: string \\| keyof WindowEventMap, eventPayload?: any) =&gt; Promise&lt;void&gt;; }&gt;",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/testing/library.ts",
      "mdFile": "core.createdom.md"
    },
    {
      "name": "document",
      "id": "elementfixture-document",
      "hierarchy": [
        {
          "name": "ElementFixture",
          "id": "elementfixture-document"
        },
        {
          "name": "document",
          "id": "elementfixture-document"
        }
      ],
      "kind": "Property",
      "content": "```typescript\ndocument: MockDocument;\n```",
      "mdFile": "core.elementfixture.document.md"
    },
    {
      "name": "domRender",
      "id": "domrender",
      "hierarchy": [
        {
          "name": "domRender",
          "id": "domrender"
        }
      ],
      "kind": "Function",
      "content": "```typescript\nexport declare function domRender(jsx: JSXOutput, opts?: {\n    debug?: boolean;\n}): Promise<{\n    document: Document;\n    container: import(\"@qwik.dev/core\").ClientContainer;\n    vNode: _VNode | null;\n    getStyles: () => Record<string, string | string[]>;\n}>;\n```\n\n\n<table><thead><tr><th>\n\nParameter\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\njsx\n\n\n</td><td>\n\nJSXOutput\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\nopts\n\n\n</td><td>\n\n{ debug?: boolean; }\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n</tbody></table>\n\n**Returns:**\n\nPromise&lt;{ document: Document; container: import(\"@qwik.dev/core\").ClientContainer; vNode: \\_VNode \\| null; getStyles: () =&gt; Record&lt;string, string \\| string\\[\\]&gt;; }&gt;",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/testing/rendering.unit-util.tsx",
      "mdFile": "core.domrender.md"
    },
    {
      "name": "ElementFixture",
      "id": "elementfixture",
      "hierarchy": [
        {
          "name": "ElementFixture",
          "id": "elementfixture"
        }
      ],
      "kind": "Class",
      "content": "Creates a simple DOM structure for testing components.\n\nBy default `EntityFixture` creates:\n\n```html\n<host q:view=\"./component_fixture.noop\">\n  <child></child>\n</host>\n```\n\n\n```typescript\nexport declare class ElementFixture \n```\n\n\n<table><thead><tr><th>\n\nConstructor\n\n\n</th><th>\n\nModifiers\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\n[(constructor)(options)](#)\n\n\n</td><td>\n\n\n</td><td>\n\nConstructs a new instance of the `ElementFixture` class\n\n\n</td></tr>\n</tbody></table>\n\n\n<table><thead><tr><th>\n\nProperty\n\n\n</th><th>\n\nModifiers\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\n[child](#elementfixture-child)\n\n\n</td><td>\n\n\n</td><td>\n\nHTMLElement\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[document](#elementfixture-document)\n\n\n</td><td>\n\n\n</td><td>\n\nMockDocument\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[host](#elementfixture-host)\n\n\n</td><td>\n\n\n</td><td>\n\nHTMLElement\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[parent](#elementfixture-parent)\n\n\n</td><td>\n\n\n</td><td>\n\nHTMLElement\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[superParent](#elementfixture-superparent)\n\n\n</td><td>\n\n\n</td><td>\n\nHTMLElement\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\n[window](#elementfixture-window)\n\n\n</td><td>\n\n\n</td><td>\n\nMockWindow\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/testing/element-fixture.ts",
      "mdFile": "core.elementfixture.md"
    },
    {
      "name": "emulateExecutionOfQwikFuncs",
      "id": "emulateexecutionofqwikfuncs",
      "hierarchy": [
        {
          "name": "emulateExecutionOfQwikFuncs",
          "id": "emulateexecutionofqwikfuncs"
        }
      ],
      "kind": "Function",
      "content": "```typescript\nexport declare function emulateExecutionOfQwikFuncs(document: Document): void;\n```\n\n\n<table><thead><tr><th>\n\nParameter\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\ndocument\n\n\n</td><td>\n\nDocument\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>\n\n**Returns:**\n\nvoid",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/testing/rendering.unit-util.tsx",
      "mdFile": "core.emulateexecutionofqwikfuncs.md"
    },
    {
      "name": "expectDOM",
      "id": "expectdom",
      "hierarchy": [
        {
          "name": "expectDOM",
          "id": "expectdom"
        }
      ],
      "kind": "Function",
      "content": "```typescript\nexport declare function expectDOM(actual: Element, expected: string): Promise<void>;\n```\n\n\n<table><thead><tr><th>\n\nParameter\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\nactual\n\n\n</td><td>\n\nElement\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\nexpected\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>\n\n**Returns:**\n\nPromise&lt;void&gt;",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/testing/expect-dom.tsx",
      "mdFile": "core.expectdom.md"
    },
    {
      "name": "getTestPlatform",
      "id": "gettestplatform",
      "hierarchy": [
        {
          "name": "getTestPlatform",
          "id": "gettestplatform"
        }
      ],
      "kind": "Function",
      "content": "```typescript\nexport declare function getTestPlatform(): TestPlatform;\n```\n**Returns:**\n\nTestPlatform",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/testing/platform.ts",
      "mdFile": "core.gettestplatform.md"
    },
    {
      "name": "host",
      "id": "elementfixture-host",
      "hierarchy": [
        {
          "name": "ElementFixture",
          "id": "elementfixture-host"
        },
        {
          "name": "host",
          "id": "elementfixture-host"
        }
      ],
      "kind": "Property",
      "content": "```typescript\nhost: HTMLElement;\n```",
      "mdFile": "core.elementfixture.host.md"
    },
    {
      "name": "parent",
      "id": "elementfixture-parent",
      "hierarchy": [
        {
          "name": "ElementFixture",
          "id": "elementfixture-parent"
        },
        {
          "name": "parent",
          "id": "elementfixture-parent"
        }
      ],
      "kind": "Property",
      "content": "```typescript\nparent: HTMLElement;\n```",
      "mdFile": "core.elementfixture.parent.md"
    },
    {
      "name": "ssrRenderToDom",
      "id": "ssrrendertodom",
      "hierarchy": [
        {
          "name": "ssrRenderToDom",
          "id": "ssrrendertodom"
        }
      ],
      "kind": "Function",
      "content": "```typescript\nexport declare function ssrRenderToDom(jsx: JSXOutput, opts?: {\n    debug?: boolean;\n    raw?: boolean;\n    qwikLoader?: boolean;\n    onBeforeResume?: (document: Document) => void;\n}): Promise<{\n    container: _DomContainer;\n    document: Document;\n    vNode: _VNode | null;\n    getStyles: () => Record<string, string | string[]>;\n}>;\n```\n\n\n<table><thead><tr><th>\n\nParameter\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\njsx\n\n\n</td><td>\n\nJSXOutput\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\nopts\n\n\n</td><td>\n\n{ debug?: boolean; raw?: boolean; qwikLoader?: boolean; onBeforeResume?: (document: Document) =&gt; void; }\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n</tbody></table>\n\n**Returns:**\n\nPromise&lt;{ container: \\_DomContainer; document: Document; vNode: \\_VNode \\| null; getStyles: () =&gt; Record&lt;string, string \\| string\\[\\]&gt;; }&gt;",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/testing/rendering.unit-util.tsx",
      "mdFile": "core.ssrrendertodom.md"
    },
    {
      "name": "superParent",
      "id": "elementfixture-superparent",
      "hierarchy": [
        {
          "name": "ElementFixture",
          "id": "elementfixture-superparent"
        },
        {
          "name": "superParent",
          "id": "elementfixture-superparent"
        }
      ],
      "kind": "Property",
      "content": "```typescript\nsuperParent: HTMLElement;\n```",
      "mdFile": "core.elementfixture.superparent.md"
    },
    {
      "name": "trigger",
      "id": "trigger",
      "hierarchy": [
        {
          "name": "trigger",
          "id": "trigger"
        }
      ],
      "kind": "Function",
      "content": "Trigger an event in unit tests on an element.\n\nFuture deprecation candidate.\n\n\n```typescript\nexport declare function trigger(root: Element, queryOrElement: string | Element | keyof HTMLElementTagNameMap | null, eventName: string, eventPayload?: any, options?: {\n    waitForIdle?: boolean;\n}): Promise<void>;\n```\n\n\n<table><thead><tr><th>\n\nParameter\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\nroot\n\n\n</td><td>\n\nElement\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\nqueryOrElement\n\n\n</td><td>\n\nstring \\| Element \\| keyof HTMLElementTagNameMap \\| null\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\neventName\n\n\n</td><td>\n\nstring\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\neventPayload\n\n\n</td><td>\n\nany\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n<tr><td>\n\noptions\n\n\n</td><td>\n\n{ waitForIdle?: boolean; }\n\n\n</td><td>\n\n_(Optional)_\n\n\n</td></tr>\n</tbody></table>\n\n**Returns:**\n\nPromise&lt;void&gt;",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/testing/element-fixture.ts",
      "mdFile": "core.trigger.md"
    },
    {
      "name": "vnode_fromJSX",
      "id": "vnode_fromjsx",
      "hierarchy": [
        {
          "name": "vnode_fromJSX",
          "id": "vnode_fromjsx"
        }
      ],
      "kind": "Function",
      "content": "```typescript\nexport declare function vnode_fromJSX(jsx: JSXOutput): {\n    vParent: _ElementVNode | _VirtualVNode;\n    vNode: _VNode | null;\n    document: _QDocument;\n    container: ClientContainer;\n};\n```\n\n\n<table><thead><tr><th>\n\nParameter\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\njsx\n\n\n</td><td>\n\nJSXOutput\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>\n\n**Returns:**\n\n{ vParent: \\_ElementVNode \\| \\_VirtualVNode; vNode: \\_VNode \\| null; document: \\_QDocument; container: ClientContainer; }",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/testing/vdom-diff.unit-util.ts",
      "mdFile": "core.vnode_fromjsx.md"
    },
    {
      "name": "waitForDrain",
      "id": "waitfordrain",
      "hierarchy": [
        {
          "name": "waitForDrain",
          "id": "waitfordrain"
        }
      ],
      "kind": "Function",
      "content": "Wait for the scheduler to drain.\n\nThis is useful when testing async code.\n\n\n```typescript\nexport declare function waitForDrain(container: Container): Promise<void>;\n```\n\n\n<table><thead><tr><th>\n\nParameter\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\ncontainer\n\n\n</td><td>\n\nContainer\n\n\n</td><td>\n\nThe application container.\n\n\n</td></tr>\n</tbody></table>\n\n**Returns:**\n\nPromise&lt;void&gt;",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/testing/util.ts",
      "mdFile": "core.waitfordrain.md"
    },
    {
      "name": "walkJSX",
      "id": "walkjsx",
      "hierarchy": [
        {
          "name": "walkJSX",
          "id": "walkjsx"
        }
      ],
      "kind": "Function",
      "content": "```typescript\nexport declare function walkJSX(jsx: JSXOutput, apply: {\n    enter: (jsx: JSXNodeInternal) => void;\n    leave: (jsx: JSXNodeInternal) => void;\n    text: (text: _Stringifiable) => void;\n}): void;\n```\n\n\n<table><thead><tr><th>\n\nParameter\n\n\n</th><th>\n\nType\n\n\n</th><th>\n\nDescription\n\n\n</th></tr></thead>\n<tbody><tr><td>\n\njsx\n\n\n</td><td>\n\nJSXOutput\n\n\n</td><td>\n\n\n</td></tr>\n<tr><td>\n\napply\n\n\n</td><td>\n\n{ enter: (jsx: JSXNodeInternal) =&gt; void; leave: (jsx: JSXNodeInternal) =&gt; void; text: (text: \\_Stringifiable) =&gt; void; }\n\n\n</td><td>\n\n\n</td></tr>\n</tbody></table>\n\n**Returns:**\n\nvoid",
      "editUrl": "https://github.com/QwikDev/qwik/tree/main/packages/qwik/src/testing/vdom-diff.unit-util.ts",
      "mdFile": "core.walkjsx.md"
    },
    {
      "name": "window",
      "id": "elementfixture-window",
      "hierarchy": [
        {
          "name": "ElementFixture",
          "id": "elementfixture-window"
        },
        {
          "name": "window",
          "id": "elementfixture-window"
        }
      ],
      "kind": "Property",
      "content": "```typescript\nwindow: MockWindow;\n```",
      "mdFile": "core.elementfixture.window.md"
    }
  ]
}