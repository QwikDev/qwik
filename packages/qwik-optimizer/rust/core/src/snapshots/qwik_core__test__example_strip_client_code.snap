---
source: packages/qwik-optimizer/rust/core/src/test.rs
assertion_line: 1929
expression: output
---
==INPUT==


import { component$, useClientMount$, useStore, useTask$ } from '@builder.io/qwik';
import mongo from 'mongodb';
import redis from 'redis';
import threejs from 'threejs';
import { a } from './keep';
import { b } from '../keep2';
import { c } from '../../remove';

export const Parent = component$(() => {
	const state = useStore({
		text: ''
	});

	// Double count watch
	useClientMount$(async () => {
		state.text = await mongo.users();
		redis.set(state.text, a, b, c);
	});

	useTask$(() => {
		// Code
	});

	return (
		<div
			shouldRemove$={() => state.text}
			onClick$={() => console.log('parent', state, threejs)}
		>
			<Div
				onClick$={() => console.log('keep')}
				render$={() => state.text}
			/>
			{state.text}
		</div>
	);
});

============================= components/component.js ==

import "./keep";
import "../keep2";
import { componentQrl } from "@builder.io/qwik";
import { useClientMountQrl } from "@builder.io/qwik";
import { _noopQrl } from "@builder.io/qwik";
import { useTaskQrl } from "@builder.io/qwik";
import { inlinedQrl } from "@builder.io/qwik";
import { _wrapProp } from "@builder.io/qwik";
import { useLexicalScope } from "@builder.io/qwik";
import { _jsxSorted } from "@builder.io/qwik";
import { useStore } from '@builder.io/qwik';
export const Parent = /*#__PURE__*/ componentQrl(/*#__PURE__*/ inlinedQrl(()=>{
    const state = useStore({
        text: ''
    });
    // Double count watch
    useClientMountQrl(/*#__PURE__*/ _noopQrl("Parent_component_useClientMount_Yn2kIDABoYw", [
        state
    ]));
    useTaskQrl(/*#__PURE__*/ inlinedQrl(()=>{
    // Code
    }, "Parent_component_useTask_ngmvcygWux8"));
    return /*#__PURE__*/ _jsxSorted("div", null, {
        shouldRemove$: /*#__PURE__*/ _noopQrl("Parent_component_div_shouldRemove_EBj69wTX1do", [
            state
        ]),
        onClick$: /*#__PURE__*/ _noopQrl("Parent_component_div_onClick_0PioS4FByUg", [
            state
        ])
    }, [
        /*#__PURE__*/ _jsxSorted(Div, null, {
            onClick$: /*#__PURE__*/ inlinedQrl(()=>console.log('keep'), "Parent_component_div_Div_onClick_kgowuto5dR0"),
            render$: /*#__PURE__*/ inlinedQrl(()=>{
                const [state] = useLexicalScope();
                return state.text;
            }, "Parent_component_div_Div_render_CkMybN6xzQk", [
                state
            ])
        }, null, 3, "7R_0"),
        _wrapProp(state, "text")
    ], 1, "7R_1");
}, "Parent_component_t6Wy3C0Q0XM"));


Some("{\"version\":3,\"sources\":[\"/user/qwik/src/components/component.tsx\"],\"names\":[],\"mappings\":\";;;;;;;;;;AACA,SAAsC,QAAQ,QAAkB,mBAAmB;AAQnF,OAAO,MAAM,uBAAS,sCAAW;IAChC,MAAM,QAAQ,SAAS;QACtB,MAAM;IACP;IAEA,qBAAqB;IACrB;;;IAKA,oCAAS;IACR,OAAO;IACR;IAEA,qBACC,WAAC;QACA,aAAa;;;QACb,QAAQ;;;;sBAER,WAAC;YACA,QAAQ,2BAAE,IAAM,QAAQ,GAAG,CAAC;YAC5B,OAAO,2BAAE;;uBAAM,MAAM,IAAI;;;;;kBAEzB;;AAGJ,oCAAG\"}")
== DIAGNOSTICS ==

[]
