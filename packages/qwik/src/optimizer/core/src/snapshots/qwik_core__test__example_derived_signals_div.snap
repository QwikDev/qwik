---
source: packages/qwik/src/optimizer/core/src/test.rs
assertion_line: 2774
expression: output
snapshot_kind: text
---
==INPUT==


import { component$, useStore, mutable } from '@qwik.dev/core';

import {dep} from './file';
import styles from './styles.module.css';

export const App = component$((props) => {
	const signal = useSignal(0);
	const store = useStore({});
	const count = props.counter.count;

	return (
		<div
			class={{
				even: count % 2 === 0,
				odd: count % 2 === 1,
				stable0: true,
				hidden: false,
			}}
			staticClass={styles.foo}
			staticDocument={window.document}
			staticText="text"
			staticText2={`text`}
			staticNumber={1}
			staticBoolean={true}
			staticExpr={`text${12}`}
			staticExpr2={typeof `text${12}` === 'string' ? 12 : 43}

			signal={signal}
			signalValue={signal.value}
			signalComputedValue={12 + signal.value}

			store={store.address.city.name}
			storeComputed={store.address.city.name ? 'true' : 'false'}

			dep={dep}
			depAccess={dep.thing}
			depComputed={dep.thing + 'stuff'}

			global={globalThing}
			globalAccess={globalThing.thing}
			globalComputed={globalThing.thing + 'stuff'}


			noInline={signal.value()}
			noInline2={signal.value + unknown()}
			noInline3={mutable(signal)}
			noInline4={signal.value + dep}
		/>

	);
});

============================= test.js ==

import { componentQrl } from "@qwik.dev/core";
import { _fnSignal } from "@qwik.dev/core";
import { _wrapProp } from "@qwik.dev/core";
import { _jsxSorted } from "@qwik.dev/core";
import { inlinedQrl } from "@qwik.dev/core";
import { _addLoc } from "@qwik.dev/core/internal";
import { useStore, mutable } from '@qwik.dev/core';
import { dep } from './file';
import styles from './styles.module.css';
const App_component_ckEPmXZlub0 = (props)=>{
    const signal = _addLoc(useSignal(0), "test.tsx", 9, 17);
    const store = _addLoc(useStore({}), "test.tsx", 10, 16);
    const count = _addLoc(props.counter.count, "test.tsx", 11, 16);
    return /*#__PURE__*/ _jsxSorted("div", {
        class: {
            even: count % 2 === 0,
            odd: count % 2 === 1,
            stable0: true,
            hidden: false
        },
        global: globalThing,
        globalAccess: globalThing.thing,
        globalComputed: globalThing.thing + 'stuff',
        noInline: signal.value(),
        noInline2: signal.value + unknown(),
        noInline3: mutable(signal),
        noInline4: signal.value + dep,
        signal: signal,
        signalComputedValue: _fnSignal((p0)=>12 + p0.value, [
            signal
        ], "12+p0.value"),
        signalValue: _wrapProp(signal),
        staticDocument: window.document,
        store: _fnSignal((p0)=>p0.address.city.name, [
            store
        ], "p0.address.city.name"),
        storeComputed: _fnSignal((p0)=>p0.address.city.name ? 'true' : 'false', [
            store
        ], 'p0.address.city.name?"true":"false"')
    }, {
        staticClass: styles.foo,
        staticText: "text",
        staticText2: `text`,
        staticNumber: 1,
        staticBoolean: true,
        staticExpr: `text${12}`,
        staticExpr2: typeof `text${12}` === 'string' ? 12 : 43,
        dep: dep,
        depAccess: dep.thing,
        depComputed: dep.thing + 'stuff'
    }, null, 3, "u6_0");
};
export const App = /*#__PURE__*/ _addLoc(componentQrl(/*#__PURE__*/ inlinedQrl(App_component_ckEPmXZlub0, "App_component_ckEPmXZlub0")), "test.tsx", 8, 20);


Some("{\"version\":3,\"sources\":[\"/user/qwik/src/test.tsx\"],\"names\":[],\"mappings\":\";;;;;;AACA,SAAqB,QAAQ,EAAE,OAAO,QAAQ,iBAAiB;AAE/D,SAAQ,GAAG,QAAO,SAAS;AAC3B,OAAO,YAAY,sBAAsB;kCAEX,CAAC;IAC9B,MAAM,SAAS,QAAA,UAAU;IACzB,MAAM,QAAQ,QAAA,SAAS,CAAC;IACxB,MAAM,QAAQ,QAAA,MAAM,OAAO,CAAC,KAAK;IAEjC,qBACC,WAAC;QACA,OAAO;YACN,MAAM,QAAQ,MAAM;YACpB,KAAK,QAAQ,MAAM;YACnB,SAAS;YACT,QAAQ;QACT;QAqBA,QAAQ;QACR,cAAc,YAAY,KAAK;QAC/B,gBAAgB,YAAY,KAAK,GAAG;QAGpC,UAAU,OAAO,KAAK;QACtB,WAAW,OAAO,KAAK,GAAG;QAC1B,WAAW,QAAQ;QACnB,WAAW,OAAO,KAAK,GAAG;QAnB1B,QAAQ;QAER,mBAAmB,kBAAE,KAAK,GAAO,KAAK;;;QADtC,WAAW,YAAE;QATb,gBAAgB,OAAO,QAAQ;QAY/B,KAAK,kBAAE,GAAM,OAAO,CAAC,IAAI,CAAC,IAAI;;;QAC9B,aAAa,kBAAE,GAAM,OAAO,CAAC,IAAI,CAAC,IAAI,GAAG,SAAS;;;;QAdlD,aAAa,OAAO,GAAG;QAEvB,YAAW;QACX,aAAa,CAAC,IAAI,CAAC;QACnB,cAAc;QACd,eAAe;QACf,YAAY,CAAC,IAAI,EAAE,IAAI;QACvB,aAAa,OAAO,CAAC,IAAI,EAAE,IAAI,KAAK,WAAW,KAAK;QASpD,KAAK;QACL,WAAW,IAAI,KAAK;QACpB,aAAa,IAAI,KAAK,GAAG;;AAc5B;AA7CA,OAAO,MAAM,oBAAM,QAAA,mHA6ChB\"}")
== DIAGNOSTICS ==

[]
