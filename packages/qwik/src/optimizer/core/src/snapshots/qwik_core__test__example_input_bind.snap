---
source: packages/qwik/src/optimizer/core/src/test.rs
assertion_line: 2007
expression: output
---
==INPUT==


import { component$, $ } from '@builder.io/qwik';

export const Greeter = component$(() => {
	const value = useSignal(0);
	const checked = useSignal(false);
	const stuff = useSignal();
	return (
		<>
			<input bind:value={value} />
			<input bind:checked={checked} />
			<input bind:stuff={stuff} />
			<div>{value}</div>
			<div>{value.value}</div>
		</>

	)
});

============================= test.js ==

import { componentQrl } from "@builder.io/qwik";
import { useLexicalScope } from "@builder.io/qwik";
import { inlinedQrl } from "@builder.io/qwik";
import { _jsxSorted } from "@builder.io/qwik";
import { _wrapProp } from "@builder.io/qwik";
import { Fragment as _Fragment } from "@builder.io/qwik/jsx-runtime";
export const Greeter = /*#__PURE__*/ componentQrl(/*#__PURE__*/ inlinedQrl(()=>{
    const value = useSignal(0);
    const checked = useSignal(false);
    const stuff = useSignal();
    return /*#__PURE__*/ _jsxSorted(_Fragment, null, null, [
        /*#__PURE__*/ _jsxSorted("input", null, {
            "value": value,
            "onInput$": /*#__PURE__*/ inlinedQrl((_, elm)=>{
                const [value] = useLexicalScope();
                return value.value = elm.value;
            }, "s_SO0WIOE0Sqc", [
                value
            ])
        }, null, 3, null),
        /*#__PURE__*/ _jsxSorted("input", null, {
            "checked": checked,
            "onInput$": /*#__PURE__*/ inlinedQrl((_, elm)=>{
                const [checked] = useLexicalScope();
                return checked.value = elm.checked;
            }, "s_VKebOylP0Dk", [
                checked
            ])
        }, null, 3, null),
        /*#__PURE__*/ _jsxSorted("input", null, {
            "stuff": stuff,
            "onChange$": /*#__PURE__*/ inlinedQrl((_, elm)=>{
                const [stuff] = useLexicalScope();
                return stuff.value = elm.stuff;
            }, "s_HplsUb3Bodg", [
                stuff
            ])
        }, null, 3, null),
        /*#__PURE__*/ _jsxSorted("div", null, null, value, 3, null),
        /*#__PURE__*/ _jsxSorted("div", null, null, _wrapProp(value), 3, null)
    ], 3, "u6_0");
}, "s_n7HuG2hhU0Q"));


Some("{\"version\":3,\"sources\":[\"/user/qwik/src/test.tsx\"],\"names\":[],\"mappings\":\";;;;;;AAGA,OAAO,MAAM,wBAAU,sCAAW,IAAM;IACvC,MAAM,QAAQ,UAAU;IACxB,MAAM,UAAU,UAAU,KAAK;IAC/B,MAAM,QAAQ;IACd,qBACC;sBACC,WAAC;qBAAkB;;;uBAAA;;;;;sBACnB,WAAC;uBAAoB;;;uBAAA;;;;;sBACrB,WAAC;qBAAkB;;;uBAAA;;;;;sBACnB,WAAC,mBAAK;sBACN,WAAC,6BAAK;;AAIT,qBAAG\"}")
== DIAGNOSTICS ==

[]
