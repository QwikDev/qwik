---
source: packages/qwik/src/optimizer/core/src/test.rs
assertion_line: 767
expression: output
---
==INPUT==


import { component$ } from '@builder.io/qwik';

export const AtomStatus = component$(({ctx,atom})=>{
	let status = atom.status;
	if(!atom.real) {
		status="WILL-VANISH"
	} else if (JSON.stringify(atom.atom)==JSON.stringify(atom.real)) {
		status="WTFED"
	}
	return (
		<span title={atom.ID} onClick$={(ev)=>atomStatusClick(ctx,ev,[atom])} class={["atom",status,ctx.store[atom.ID]?"selected":null]}>
		</span>
	);
})

============================= test.jsx ==

import { componentQrl } from "@builder.io/qwik";
import { useLexicalScope } from "@builder.io/qwik";
import { inlinedQrl } from "@builder.io/qwik";
export const AtomStatus = /*#__PURE__*/ componentQrl(/*#__PURE__*/ inlinedQrl((props)=>{
    let status = props.atom.status;
    if (!props.atom.real) status = "WILL-VANISH";
    else if (JSON.stringify(props.atom.atom) == JSON.stringify(props.atom.real)) status = "WTFED";
    return <span title={props.atom.ID} onClick$={/*#__PURE__*/ inlinedQrl((ev)=>{
        const [props] = useLexicalScope();
        return atomStatusClick(props.ctx, ev, [
            props.atom
        ]);
    }, "AtomStatus_component_span_onClick_Owf5fKaOlF0", [
        props
    ])} class={[
        "atom",
        status,
        props.ctx.store[props.atom.ID] ? "selected" : null
    ]}>

		</span>;
}, "AtomStatus_component_hdwpoUtydSA"));


Some("{\"version\":3,\"sources\":[\"/user/qwik/src/test.tsx\"],\"names\":[],\"mappings\":\";;;AAGA,OAAO,MAAM,2BAAa,sCAAW,SAAc;IAClD,IAAI,SAAS,MAD6B,KACxB,MAAM;IACxB,IAAG,CAAC,MAFsC,KAEjC,IAAI,EACZ,SAAO;SACD,IAAI,KAAK,SAAS,CAAC,MAJgB,KAIX,IAAI,KAAG,KAAK,SAAS,CAAC,MAJX,KAIgB,IAAI,GAC7D,SAAO;IAER,QACE,KAAK,OAAO,MAR4B,KAQvB,EAAE,EAAE,mCAAU,CAAC;;eAAK,sBARD,KAQqB,IAAG;kBARpB;SAQ0B;;;QAAG,OAAO;QAAC;QAAO;QAAO,MARvD,IAQ2D,KAAK,CAAC,MAR7D,KAQkE,EAAE,CAAC,GAAC,aAAW,IAAI;KAAC,EAAE;;EACjI,EAAE;AAEJ,wCAAE\"}")
== DIAGNOSTICS ==

[]
