---
source: packages/qwik/src/optimizer/core/src/test.rs
assertion_line: 514
expression: output
---
==INPUT==


import { $, component$, useTask$ } from '@builder.io/qwik';
import { CONST } from 'const';
export const Works = component$(({
    count,
    some = 1+2,
    hello = CONST,
    stuff: hey,
    stuffDefault: hey2 = 123,
    ...rest}) => {
    console.log(hey, some);
    useTask$(({track}) => {
        track(() => count);
        console.log(count, rest, hey, some, hey2);
    });
    return (
        <div some={some} params={{ some }} class={count} {...rest} override>{count}</div>
    );
});

export const NoWorks2 = component$(({count, stuff: {hey}}) => {
    console.log(hey);
    useTask$(({track}) => {
        track(() => count);
        console.log(count);
    });
    return (
        <div class={count}>{count}</div>
    );
});

export const NoWorks3 = component$(({count, stuff = hola()}) => {
    console.log(stuff);
    useTask$(({track}) => {
        track(() => count);
        console.log(count);
    });
    return (
        <div class={count}>{count}</div>
    );
});

============================= test.js ==

import { _restProps } from "@builder.io/qwik";
import { componentQrl } from "@builder.io/qwik";
import { useTaskQrl } from "@builder.io/qwik";
import { useLexicalScope } from "@builder.io/qwik";
import { inlinedQrl } from "@builder.io/qwik";
import { _fnSignal } from "@builder.io/qwik";
import { _IMMUTABLE } from "@builder.io/qwik";
import { _jsxS } from "@builder.io/qwik";
import { _jsxQ } from "@builder.io/qwik";
export const Works = /*#__PURE__*/ componentQrl(/*#__PURE__*/ inlinedQrl((props)=>{
    const rest = _restProps(props, [
        "count",
        "some",
        "hello",
        "stuff",
        "stuffDefault"
    ]);
    console.log(props.stuff, props.some ?? 3);
    useTaskQrl(/*#__PURE__*/ inlinedQrl(({ track  })=>{
        const [props, rest] = useLexicalScope();
        track(()=>props.count);
        console.log(props.count, rest, props.stuff, props.some ?? 3, props.stuffDefault ?? 123);
    }, "Works_component_useTask_pjo5U5Ikll0", [
        props,
        rest
    ]));
    return /*#__PURE__*/ _jsxS("div", {
        get some () {
            return props.some ?? 3;
        },
        get params () {
            return {
                some: props.some ?? 3
            };
        },
        get class () {
            return props.count;
        },
        ...rest,
        override: true,
        children: _fnSignal((p0)=>p0.count, [
            props
        ], "p0.count")
    }, {
        some: _fnSignal((p0)=>p0.some ?? 3, [
            props
        ], "p0.some??1+2"),
        params: _fnSignal((p0)=>({
                some: p0.some ?? 3
            }), [
            props
        ], "{some:p0.some??1+2}"),
        class: _fnSignal((p0)=>p0.count, [
            props
        ], "p0.count"),
        override: _IMMUTABLE
    }, 0, "u6_0");
}, "Works_component_t45qL4vNGv0"));
export const NoWorks2 = /*#__PURE__*/ componentQrl(/*#__PURE__*/ inlinedQrl(({ count , stuff: { hey  }  })=>{
    console.log(hey);
    useTaskQrl(/*#__PURE__*/ inlinedQrl(({ track  })=>{
        const [count] = useLexicalScope();
        track(()=>count);
        console.log(count);
    }, "NoWorks2_component_useTask_lXiqwbxxjq0", [
        count
    ]));
    return /*#__PURE__*/ _jsxQ("div", {
        class: count
    }, null, count, 1, "u6_1");
}, "NoWorks2_component_JPD9t2HyEKg"));
export const NoWorks3 = /*#__PURE__*/ componentQrl(/*#__PURE__*/ inlinedQrl(({ count , stuff =hola()  })=>{
    console.log(stuff);
    useTaskQrl(/*#__PURE__*/ inlinedQrl(({ track  })=>{
        const [count] = useLexicalScope();
        track(()=>count);
        console.log(count);
    }, "NoWorks3_component_useTask_3cQGU0s1VwU", [
        count
    ]));
    return /*#__PURE__*/ _jsxQ("div", {
        class: count
    }, null, count, 1, "u6_2");
}, "NoWorks3_component_fc13h5yYn14"));


Some("{\"version\":3,\"sources\":[\"/user/qwik/src/test.tsx\"],\"names\":[],\"mappings\":\";;;;;;;;;AAGA,OAAO,MAAM,sBAAQ,sCAAW,SAMf;;;;;;;;IACb,QAAQ,GAAG,OAHX,aAFA,QAAO;IAMP,oCAAS,CAAC,EAAC,MAAK,EAAC;;QACb,MAAM,UARV;QASI,QAAQ,GAAG,OATf,OASuB,YANvB,aAFA,QAAO,SAGP,gBAAqB;;;;;IAOrB,qBACI,MAAC;YAAI;yBAXT,QAAO;;YAWc;mBAAQ;gBAAE,IAAI,QAXnC,QAAO;YAW6B;;YAAG;yBAZvC;;QAYsD,GAAG,IAAI;QAAE,QAAQ;qCAZvE;;;;QAYS,IAAI,qBAXb,QAAO;;;QAWc,MAAM,kBAAE,CAAA;gBAAE,IAAI,KAXnC,QAAO;YAW6B,CAAA;;;QAAG,KAAK,qBAZ5C;;;QAY+D,QAAQ;;AAE3E,mCAAG;AAEH,OAAO,MAAM,yBAAW,sCAAW,CAAC,EAAC,MAAK,EAAE,OAAO,EAAC,IAAG,EAAC,CAAA,EAAC,GAAK;IAC1D,QAAQ,GAAG,CAAC;IACZ,oCAAS,CAAC,EAAC,MAAK,EAAC;;QACb,MAAM,IAAM;QACZ,QAAQ,GAAG,CAAC;;;;IAEhB,qBACI,MAAC;QAAI,OAAO;aAAQ;AAE5B,sCAAG;AAEH,OAAO,MAAM,yBAAW,sCAAW,CAAC,EAAC,MAAK,EAAE,OAAQ,OAAM,EAAC,GAAK;IAC5D,QAAQ,GAAG,CAAC;IACZ,oCAAS,CAAC,EAAC,MAAK,EAAC;;QACb,MAAM,IAAM;QACZ,QAAQ,GAAG,CAAC;;;;IAEhB,qBACI,MAAC;QAAI,OAAO;aAAQ;AAE5B,sCAAG\"}")
== DIAGNOSTICS ==

[]
