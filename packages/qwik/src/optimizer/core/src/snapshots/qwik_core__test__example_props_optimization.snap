---
source: packages/qwik/src/optimizer/core/src/test.rs
assertion_line: 515
expression: output
snapshot_kind: text
---
==INPUT==


import { $, component$, useTask$ } from '@qwik.dev/core';
import { CONST } from 'const';
export const Works = component$(({
	count,
	some = 1+2,
	hello = CONST,
	stuff: hey,
	stuffDefault: hey2 = 123,
	...rest}) => {
	console.log(hey, some);
	useTask$(({track}) => {
		track(() => count);
		console.log(count, rest, hey, some, hey2);
	});
	return (
		<div some={some} params={{ some }} class={count} {...rest} override>{count}</div>
	);
});

export const NoWorks2 = component$(({count, stuff: {hey}}) => {
	console.log(hey);
	useTask$(({track}) => {
		track(() => count);
		console.log(count);
	});
	return (
		<div class={count}>{count}</div>
	);
});

export const NoWorks3 = component$(({count, stuff = hola()}) => {
	console.log(stuff);
	useTask$(({track}) => {
		track(() => count);
		console.log(count);
	});
	return (
		<div class={count}>{count}</div>
	);
});

============================= test.js ==

import { _restProps } from "@qwik.dev/core";
import { componentQrl } from "@qwik.dev/core";
import { useTaskQrl } from "@qwik.dev/core";
import { useLexicalScope } from "@qwik.dev/core";
import { inlinedQrl } from "@qwik.dev/core";
import { _fnSignal } from "@qwik.dev/core";
import { _wrapProp } from "@qwik.dev/core";
import { _getVarProps } from "@qwik.dev/core";
import { _getConstProps } from "@qwik.dev/core";
import { _jsxSplit } from "@qwik.dev/core";
import { _jsxSorted } from "@qwik.dev/core";
export const Works = /*#__PURE__*/ componentQrl(/*#__PURE__*/ inlinedQrl((_rawProps)=>{
    const rest = _restProps(_rawProps, [
        "count",
        "some",
        "hello",
        "stuff",
        "stuffDefault"
    ]);
    console.log(_rawProps.stuff, _rawProps.some ?? 3);
    useTaskQrl(/*#__PURE__*/ inlinedQrl(({ track })=>{
        const [_rawProps, rest] = useLexicalScope();
        track(()=>_rawProps.count);
        console.log(_rawProps.count, rest, _rawProps.stuff, _rawProps.some ?? 3, _rawProps.stuffDefault ?? 123);
    }, "Works_component_useTask_pjo5U5Ikll0", [
        _rawProps,
        rest
    ]));
    return /*#__PURE__*/ _jsxSplit("div", {
        some: _fnSignal((p0)=>p0.some ?? 3, [
            _rawProps
        ], "p0.some??1+2"),
        params: _fnSignal((p0)=>({
                some: p0.some ?? 3
            }), [
            _rawProps
        ], "{some:p0.some??1+2}"),
        class: _wrapProp(_rawProps, "count"),
        ..._getVarProps(rest)
    }, {
        ..._getConstProps(rest),
        override: true
    }, _wrapProp(_rawProps, "count"), 0, "u6_0");
}, "Works_component_t45qL4vNGv0"));
export const NoWorks2 = /*#__PURE__*/ componentQrl(/*#__PURE__*/ inlinedQrl(({ count, stuff: { hey } })=>{
    console.log(hey);
    useTaskQrl(/*#__PURE__*/ inlinedQrl(({ track })=>{
        const [count] = useLexicalScope();
        track(()=>count);
        console.log(count);
    }, "NoWorks2_component_useTask_lXiqwbxxjq0", [
        count
    ]));
    return /*#__PURE__*/ _jsxSorted("div", {
        class: count
    }, null, count, 1, "u6_1");
}, "NoWorks2_component_JPD9t2HyEKg"));
export const NoWorks3 = /*#__PURE__*/ componentQrl(/*#__PURE__*/ inlinedQrl(({ count, stuff = hola() })=>{
    console.log(stuff);
    useTaskQrl(/*#__PURE__*/ inlinedQrl(({ track })=>{
        const [count] = useLexicalScope();
        track(()=>count);
        console.log(count);
    }, "NoWorks3_component_useTask_3cQGU0s1VwU", [
        count
    ]));
    return /*#__PURE__*/ _jsxSorted("div", {
        class: count
    }, null, count, 1, "u6_2");
}, "NoWorks3_component_fc13h5yYn14"));


Some("{\"version\":3,\"sources\":[\"/user/qwik/src/test.tsx\"],\"names\":[],\"mappings\":\";;;;;;;;;;;AAGA,OAAO,MAAM,sBAAQ,sCAAW;;;;;;;;IAO/B,QAAQ,GAAG,WAHX,iBAFA,QAAO;IAMP,oCAAS,CAAC,EAAC,KAAK,EAAC;;QAChB,MAAM,cARP;QASC,QAAQ,GAAG,WATZ,OASoB,gBANpB,iBAFA,QAAO,aAGP,gBAAqB;;;;;IAOrB,qBACC,UAAC;QAAI,IAAI,qBAXV,QAAO;;;QAWW,MAAM,kBAAE,CAAA;gBAAE,IAAI,KAXhC,QAAO;YAW0B,CAAA;;;QAAG,KAAK;wBAAa;;0BAAA;QAAM,QAAQ;;AAErE,mCAAG;AAEH,OAAO,MAAM,yBAAW,sCAAW,CAAC,EAAC,KAAK,EAAE,OAAO,EAAC,GAAG,EAAC,EAAC;IACxD,QAAQ,GAAG,CAAC;IACZ,oCAAS,CAAC,EAAC,KAAK,EAAC;;QAChB,MAAM,IAAM;QACZ,QAAQ,GAAG,CAAC;;;;IAEb,qBACC,WAAC;QAAI,OAAO;aAAQ;AAEtB,sCAAG;AAEH,OAAO,MAAM,yBAAW,sCAAW,CAAC,EAAC,KAAK,EAAE,QAAQ,MAAM,EAAC;IAC1D,QAAQ,GAAG,CAAC;IACZ,oCAAS,CAAC,EAAC,KAAK,EAAC;;QAChB,MAAM,IAAM;QACZ,QAAQ,GAAG,CAAC;;;;IAEb,qBACC,WAAC;QAAI,OAAO;aAAQ;AAEtB,sCAAG\"}")
== DIAGNOSTICS ==

[]
