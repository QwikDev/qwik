---
source: packages/qwik/src/optimizer/core/src/test.rs
assertion_line: 568
expression: output
snapshot_kind: text
---
==INPUT==


import { $, component$, useSignal } from '@qwik.dev/core';
export const Works = component$(({fromProps}) => {
	let fromLocal = useSignal(0);
	return (
		<div
			computed={fromLocal + fromProps}
			local={fromLocal}
			props-wrap={fromProps}
			props-only={{props: fromProps}}
			props={{props: fromProps, local: fromLocal}}
				>
		</div>
	);
});

============================= test.js ==

import { componentQrl } from "@qwik.dev/core";
import { _fnSignal } from "@qwik.dev/core";
import { _wrapProp } from "@qwik.dev/core";
import { _jsxSorted } from "@qwik.dev/core";
import { inlinedQrl } from "@qwik.dev/core";
import { useSignal } from '@qwik.dev/core';
export const Works = /*#__PURE__*/ componentQrl(/*#__PURE__*/ inlinedQrl((_rawProps)=>{
    let fromLocal = useSignal(0);
    return /*#__PURE__*/ _jsxSorted("div", {
        computed: _fnSignal((p0, p1)=>p1 + p0.fromProps, [
            _rawProps,
            fromLocal
        ], "p1+p0.fromProps"),
        local: fromLocal,
        props: _fnSignal((p0, p1)=>({
                props: p0.fromProps,
                local: p1
            }), [
            _rawProps,
            fromLocal
        ], "{props:p0.fromProps,local:p1}"),
        "props-only": _fnSignal((p0)=>({
                props: p0.fromProps
            }), [
            _rawProps
        ], "{props:p0.fromProps}"),
        "props-wrap": _wrapProp(_rawProps, "fromProps")
    }, null, null, 3, "u6_0");
}, "Works_component_t45qL4vNGv0"));


Some("{\"version\":3,\"sources\":[\"/user/qwik/src/test.tsx\"],\"names\":[],\"mappings\":\";;;;;AACA,SAAwB,SAAS,QAAQ,iBAAiB;AAC1D,OAAO,MAAM,sBAAQ,sCAAW;IAC/B,IAAI,YAAY,UAAU;IAC1B,qBACC,WAAC;QACA,QAAQ,sBAAE,QAJqB;;;;QAK/B,OAAO;QAGP,KAAK,sBAAE,CAAA;gBAAC,KAAK,KARkB;gBAQL,KAAK;YAAW,CAAA;;;;QAD1C,YAAU,kBAAE,CAAA;gBAAC,KAAK,KAPa;YAOF,CAAA;;;QAD7B,YAAU;;AAMb,mCAAG\"}")
== DIAGNOSTICS ==

[]
