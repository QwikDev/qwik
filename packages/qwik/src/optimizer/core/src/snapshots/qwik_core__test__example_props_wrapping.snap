---
source: packages/qwik/src/optimizer/core/src/test.rs
assertion_line: 567
expression: output
---
==INPUT==


import { $, component$, useSignal } from '@builder.io/qwik';
export const Works = component$(({fromProps}) => {
	let fromLocal = useSignal(0);
	return (
		<div 
			computed={fromLocal + fromProps}
			local={fromLocal} 
			props-wrap={fromProps}
			props-only={{props: fromProps}}
			props={{props: fromProps, local: fromLocal}}
				>
		</div>
	);
});

============================= test.js ==

import { componentQrl } from "@builder.io/qwik";
import { _fnSignal } from "@builder.io/qwik";
import { _wrapProp } from "@builder.io/qwik";
import { _jsxSorted } from "@builder.io/qwik";
import { inlinedQrl } from "@builder.io/qwik";
import { useSignal } from '@builder.io/qwik';
export const Works = /*#__PURE__*/ componentQrl(/*#__PURE__*/ inlinedQrl((props)=>{
    let fromLocal = useSignal(0);
    return /*#__PURE__*/ _jsxSorted("div", {
        local: fromLocal
    }, {
        computed: _fnSignal((p0, p1)=>p0 + p1.fromProps, [
            fromLocal,
            props
        ], "p0+p1.fromProps"),
        "props-wrap": _wrapProp(props, "fromProps"),
        "props-only": _fnSignal((p0)=>({
                props: p0.fromProps
            }), [
            props
        ], "{props:p0.fromProps}"),
        props: _fnSignal((p0, p1)=>({
                props: p1.fromProps,
                local: p0
            }), [
            fromLocal,
            props
        ], "{props:p1.fromProps,local:p0}")
    }, null, 3, "u6_0");
}, "Works_component_t45qL4vNGv0"));


Some("{\"version\":3,\"sources\":[\"/user/qwik/src/test.tsx\"],\"names\":[],\"mappings\":\";;;;;AACA,SAAwB,SAAS,QAAQ,mBAAmB;AAC5D,OAAO,MAAM,sBAAQ,sCAAW,SAAiB;IAChD,IAAI,YAAY,UAAU;IAC1B,qBACC,WAAC;QAEA,OAAO;;QADP,QAAQ,sBAAE,QAJqB;;;;QAM/B,YAAU;QACV,YAAU,kBAAE,CAAA;gBAAC,KAAK,KAPa;YAOF,CAAA;;;QAC7B,KAAK,sBAAE,CAAA;gBAAC,KAAK,KARkB;gBAQL,KAAK;YAAW,CAAA;;;;;AAI7C,mCAAG\"}")
== DIAGNOSTICS ==

[]
