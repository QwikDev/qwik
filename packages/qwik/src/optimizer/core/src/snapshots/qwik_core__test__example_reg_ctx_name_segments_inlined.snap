---
source: packages/qwik/src/optimizer/core/src/test.rs
assertion_line: 891
expression: output
snapshot_kind: text
---
==INPUT==


import { $, component$, server$ } from '@qwik.dev/core';
export const Works = component$((props) => {
	const text = 'hola';
	return (
		<div onClick$={server$(() => console.log('in server', text))}></div>
	);
});

============================= test.js ==

import { componentQrl } from "@qwik.dev/core";
import { serverQrl } from "@qwik.dev/core";
import { useLexicalScope } from "@qwik.dev/core";
import { _regSymbol } from "@qwik.dev/core";
import { inlinedQrl } from "@qwik.dev/core";
import { _jsxSorted } from "@qwik.dev/core";
import { _addLoc } from "@qwik.dev/core/internal";
export const Works = /*#__PURE__*/ _addLoc(componentQrl(/*#__PURE__*/ inlinedQrl((props)=>{
    const text = _addLoc('hola', "test.tsx", 5, 15);
    return /*#__PURE__*/ _jsxSorted("div", {
        onClick$: serverQrl(/*#__PURE__*/ inlinedQrl(/*#__PURE__*/ _regSymbol(()=>{
            const [text] = useLexicalScope();
            return console.log('in server', text);
        }, "m9AaOyPPsM0"), "Works_div_onClick_server_m9AaOyPPsM0", [
            text
        ]))
    }, null, null, 2, "u6_0");
}, "Works_component_t45qL4vNGv0")), "test.tsx", 4, 22);


Some("{\"version\":3,\"sources\":[\"/user/qwik/src/test.tsx\"],\"names\":[],\"mappings\":\";;;;;;;AAEA,OAAO,MAAM,sBAAQ,QAAA,sCAAW,CAAC;IAChC,MAAM,OAAO,QAAA;IACb,qBACC,WAAC;QAAI,UAAU,4DAAQ;;mBAAM,QAAQ,GAAG,CAAC,aAAa;;;;;AAExD,uDAAG\"}")
== DIAGNOSTICS ==

[]
