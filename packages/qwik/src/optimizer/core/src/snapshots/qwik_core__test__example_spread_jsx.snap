---
source: packages/qwik/src/optimizer/core/src/test.rs
assertion_line: 2366
expression: output
snapshot_kind: text
---
==INPUT==


import { component$ } from '@qwik.dev/core';
import { useDocumentHead, useLocation } from '@qwik.dev/router';

/**
 * The RouterHead component is placed inside of the document `<head>` element.
 */
export const RouterHead = component$(() => {
	const head = useDocumentHead();
	const loc = useLocation();

	return (
	<>
		<title>{head.title}</title>

		<link rel="canonical" href={loc.href} />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />

		{head.meta.map((m) => (
			<meta {...m} />
		))}

		{head.links.map((l) => (
			<link {...l} key={l.key} />
		))}

		{head.styles.map((s) => (
			<style {...s.props} dangerouslySetInnerHTML={s.style} key={s.key} />
		))}
	</>
	);
});
============================= test.js ==

import { componentQrl } from "@qwik.dev/core";
import { qrl } from "@qwik.dev/core";
const i_DPA76mgIou0 = ()=>import("./test.tsx_RouterHead_component_DPA76mgIou0");
/**
 * The RouterHead component is placed inside of the document `<head>` element.
 */ export const RouterHead = /*#__PURE__*/ componentQrl(/*#__PURE__*/ qrl(i_DPA76mgIou0, "RouterHead_component_DPA76mgIou0"));


Some("{\"version\":3,\"sources\":[\"/user/qwik/src/test.tsx\"],\"names\":[],\"mappings\":\";;;AAIA;;CAEC,GACD,OAAO,MAAM,2BAAa,mFAyBvB\"}")
============================= test.tsx_RouterHead_component_DPA76mgIou0.js (ENTRY POINT)==

import { Fragment as _Fragment } from "@qwik.dev/core/jsx-runtime";
import { createElement as _createElement } from "@qwik.dev/core";
import { _jsxSorted } from "@qwik.dev/core";
import { _jsxSplit } from "@qwik.dev/core";
import { _wrapProp } from "@qwik.dev/core";
import { useDocumentHead } from "@qwik.dev/router";
import { useLocation } from "@qwik.dev/router";
export const RouterHead_component_DPA76mgIou0 = ()=>{
    const head = useDocumentHead();
    const loc = useLocation();
    return /*#__PURE__*/ _jsxSorted(_Fragment, null, null, [
        /*#__PURE__*/ _jsxSorted("title", null, null, head.title, 1, null),
        /*#__PURE__*/ _jsxSorted("link", null, {
            rel: "canonical",
            href: _wrapProp(loc, "href")
        }, null, 3, null),
        /*#__PURE__*/ _jsxSorted("meta", null, {
            name: "viewport",
            content: "width=device-width, initial-scale=1.0"
        }, null, 3, null),
        /*#__PURE__*/ _jsxSorted("link", null, {
            rel: "icon",
            type: "image/svg+xml",
            href: "/favicon.svg"
        }, null, 3, null),
        head.meta.map((m)=>/*#__PURE__*/ _jsxSplit("meta", {
                ...m
            }, null, null, 0, "u6_0")),
        head.links.map((l)=>/*#__PURE__*/ _createElement("link", {
                ...l,
                key: l.key
            })),
        head.styles.map((s)=>/*#__PURE__*/ _createElement("style", {
                ...s.props,
                dangerouslySetInnerHTML: s.style,
                key: s.key
            }))
    ], 1, "u6_1");
};


Some("{\"version\":3,\"sources\":[\"/user/qwik/src/test.tsx\"],\"names\":[],\"mappings\":\";;;;;;;gDAOqC;IACpC,MAAM,OAAO;IACb,MAAM,MAAM;IAEZ,qBACA;sBACC,WAAC,qBAAO,KAAK,KAAK;sBAElB,WAAC;YAAK,KAAI;YAAY,IAAI,YAAE;;sBAC5B,WAAC;YAAK,MAAK;YAAW,SAAQ;;sBAC9B,WAAC;YAAK,KAAI;YAAO,MAAK;YAAgB,MAAK;;QAE1C,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,kBACf,UAAC;gBAAM,GAAG,CAAC;;QAGX,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,kBAChB,eAAC;gBAAM,GAAG,CAAC;gBAAE,KAAK,EAAE,GAAG;;QAGvB,KAAK,MAAM,CAAC,GAAG,CAAC,CAAC,kBACjB,eAAC;gBAAO,GAAG,EAAE,KAAK;gBAAE,yBAAyB,EAAE,KAAK;gBAAE,KAAK,EAAE,GAAG;;;AAInE\"}")
/*
{
  "origin": "test.tsx",
  "name": "RouterHead_component_DPA76mgIou0",
  "entry": null,
  "displayName": "test.tsx_RouterHead_component",
  "hash": "DPA76mgIou0",
  "canonicalFilename": "test.tsx_RouterHead_component_DPA76mgIou0",
  "path": "",
  "extension": "js",
  "parent": null,
  "ctxKind": "function",
  "ctxName": "component$",
  "captures": false,
  "loc": [
    237,
    767
  ]
}
*/
== DIAGNOSTICS ==

[]
