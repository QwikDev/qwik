// GENERATED by @gel/generate v0.6.4

export * from "./external";
export { createClient } from "gel";
import * as $ from "./reflection";
import * as $syntax from "./syntax";
import * as $op from "./operators";
import _std from "./modules/std";
import _cfg from "./modules/cfg";
import _schema from "./modules/schema";
import _sys from "./modules/sys";
import _default from "./modules/default";

const ExportDefault: typeof _std &
  typeof _default &
  $.util.OmitDollarPrefixed<typeof $syntax> &
  typeof $op & {
    std: typeof _std;
    cfg: typeof _cfg;
    schema: typeof _schema;
    sys: typeof _sys;
    default: typeof _default;
  } = {
  ..._std,
  ..._default,
  ...$.util.omitDollarPrefixed($syntax),
  ...$op,
  std: _std,
  cfg: _cfg,
  schema: _schema,
  sys: _sys,
  default: _default,
};
const Cardinality = $.Cardinality;
type Cardinality = $.Cardinality;
export type Set<
  Type extends $.BaseType,
  Card extends $.Cardinality = $.Cardinality.Many,
> = $.TypeSet<Type, Card>;

export default ExportDefault;
export { Cardinality };
