// GENERATED by @gel/generate v0.6.4

import * as $ from "../../reflection";
import * as _ from "../../imports";
export type $date = $.ScalarType<"std::pg::date", unknown>;
const date: $.scalarTypeWithConstructor<$date, never> = $.makeType<
  $.scalarTypeWithConstructor<$date, never>
>(_.spec, "00000000-0000-0000-0000-000001000004", _.syntax.literal);

export type $interval = $.ScalarType<"std::pg::interval", unknown>;
const interval: $.scalarTypeWithConstructor<$interval, never> = $.makeType<
  $.scalarTypeWithConstructor<$interval, never>
>(_.spec, "00000000-0000-0000-0000-000001000005", _.syntax.literal);

export type $json = $.ScalarType<"std::pg::json", unknown>;
const json: $.scalarTypeWithConstructor<$json, never> = $.makeType<
  $.scalarTypeWithConstructor<$json, never>
>(_.spec, "00000000-0000-0000-0000-000001000001", _.syntax.literal);

export type $timestamp = $.ScalarType<"std::pg::timestamp", unknown>;
const timestamp: $.scalarTypeWithConstructor<$timestamp, never> = $.makeType<
  $.scalarTypeWithConstructor<$timestamp, never>
>(_.spec, "00000000-0000-0000-0000-000001000003", _.syntax.literal);

export type $timestamptz = $.ScalarType<"std::pg::timestamptz", unknown>;
const timestamptz: $.scalarTypeWithConstructor<$timestamptz, never> =
  $.makeType<$.scalarTypeWithConstructor<$timestamptz, never>>(
    _.spec,
    "00000000-0000-0000-0000-000001000002",
    _.syntax.literal,
  );

export { date, interval, json, timestamp, timestamptz };

type __defaultExports = {
  date: typeof date;
  interval: typeof interval;
  json: typeof json;
  timestamp: typeof timestamp;
  timestamptz: typeof timestamptz;
};
const __defaultExports: __defaultExports = {
  date: date,
  interval: interval,
  json: json,
  timestamp: timestamp,
  timestamptz: timestamptz,
};
export default __defaultExports;
