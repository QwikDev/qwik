// GENERATED by @gel/generate v0.6.4

import * as $ from "../reflection";
import * as _ from "../imports";
import type * as _schema from "./schema";
import type * as _std from "./std";
export type $OutputFormat = {
  BINARY: $.$expr_Literal<$OutputFormat>;
  JSON: $.$expr_Literal<$OutputFormat>;
  JSON_ELEMENTS: $.$expr_Literal<$OutputFormat>;
  NONE: $.$expr_Literal<$OutputFormat>;
} & $.EnumType<
  "sys::OutputFormat",
  ["BINARY", "JSON", "JSON_ELEMENTS", "NONE"]
>;
const OutputFormat: $OutputFormat = $.makeType<$OutputFormat>(
  _.spec,
  "cae65a8c-a99f-5524-9872-daecdc545531",
  _.syntax.literal,
);

export type $QueryType = {
  EdgeQL: $.$expr_Literal<$QueryType>;
  SQL: $.$expr_Literal<$QueryType>;
} & $.EnumType<"sys::QueryType", ["EdgeQL", "SQL"]>;
const QueryType: $QueryType = $.makeType<$QueryType>(
  _.spec,
  "f2887f6f-bd51-5422-8ac7-d1732fdcd17d",
  _.syntax.literal,
);

export type $TransactionAccessMode = {
  ReadOnly: $.$expr_Literal<$TransactionAccessMode>;
  ReadWrite: $.$expr_Literal<$TransactionAccessMode>;
} & $.EnumType<"sys::TransactionAccessMode", ["ReadOnly", "ReadWrite"]>;
const TransactionAccessMode: $TransactionAccessMode =
  $.makeType<$TransactionAccessMode>(
    _.spec,
    "775fc501-0b35-57fa-8587-cd7c53557cdf",
    _.syntax.literal,
  );

export type $TransactionDeferrability = {
  Deferrable: $.$expr_Literal<$TransactionDeferrability>;
  NotDeferrable: $.$expr_Literal<$TransactionDeferrability>;
} & $.EnumType<
  "sys::TransactionDeferrability",
  ["Deferrable", "NotDeferrable"]
>;
const TransactionDeferrability: $TransactionDeferrability =
  $.makeType<$TransactionDeferrability>(
    _.spec,
    "2eb021ec-461e-5b65-859c-26c1eee234a1",
    _.syntax.literal,
  );

export type $TransactionIsolation = {
  RepeatableRead: $.$expr_Literal<$TransactionIsolation>;
  Serializable: $.$expr_Literal<$TransactionIsolation>;
} & $.EnumType<"sys::TransactionIsolation", ["RepeatableRead", "Serializable"]>;
const TransactionIsolation: $TransactionIsolation =
  $.makeType<$TransactionIsolation>(
    _.spec,
    "070715f3-0100-5580-9473-696f961243eb",
    _.syntax.literal,
  );

export type $VersionStage = {
  dev: $.$expr_Literal<$VersionStage>;
  alpha: $.$expr_Literal<$VersionStage>;
  beta: $.$expr_Literal<$VersionStage>;
  rc: $.$expr_Literal<$VersionStage>;
  final: $.$expr_Literal<$VersionStage>;
} & $.EnumType<"sys::VersionStage", ["dev", "alpha", "beta", "rc", "final"]>;
const VersionStage: $VersionStage = $.makeType<$VersionStage>(
  _.spec,
  "16a08f13-b1b1-57f4-8e82-062f67fb2a4c",
  _.syntax.literal,
);

export type $SystemObjectλShape = $.typeutil.flatten<
  _schema.$Object_32faaa35947553cf88fce68ecf1be4d9λShape & {}
>;
type $SystemObject = $.ObjectType<
  "sys::SystemObject",
  $SystemObjectλShape,
  null,
  [..._schema.$Object_32faaa35947553cf88fce68ecf1be4d9["__exclusives__"]],
  | "sys::Branch"
  | "sys::Database"
  | "sys::ExtensionPackage"
  | "sys::ExtensionPackageMigration"
  | "sys::QueryStats"
  | "sys::Role"
>;
const $SystemObject = $.makeType<$SystemObject>(
  _.spec,
  "43f8d5e9-5b2e-535b-a46b-acf8af101718",
  _.syntax.literal,
);

const SystemObject: $.$expr_PathNode<
  $.TypeSet<$SystemObject, $.Cardinality.Many>,
  null
> = _.syntax.$PathNode($.$toSet($SystemObject, $.Cardinality.Many), null);

export type $ExternalObjectλShape = $.typeutil.flatten<
  $SystemObjectλShape & {}
>;
type $ExternalObject = $.ObjectType<
  "sys::ExternalObject",
  $ExternalObjectλShape,
  null,
  [...$SystemObject["__exclusives__"]],
  "sys::Branch" | "sys::Database" | "sys::QueryStats"
>;
const $ExternalObject = $.makeType<$ExternalObject>(
  _.spec,
  "e3838826-d523-59f9-86f4-be3cecdf0d4f",
  _.syntax.literal,
);

const ExternalObject: $.$expr_PathNode<
  $.TypeSet<$ExternalObject, $.Cardinality.Many>,
  null
> = _.syntax.$PathNode($.$toSet($ExternalObject, $.Cardinality.Many), null);

export type $BranchλShape = $.typeutil.flatten<
  $ExternalObjectλShape &
    _schema.$AnnotationSubjectλShape & {
      name: $.PropertyDesc<
        _std.$str,
        $.Cardinality.One,
        true,
        false,
        false,
        false
      >;
      last_migration: $.PropertyDesc<
        _std.$str,
        $.Cardinality.AtMostOne,
        false,
        false,
        false,
        false
      >;
      "<branch[is sys::QueryStats]": $.LinkDesc<
        $QueryStats,
        $.Cardinality.Many,
        {},
        false,
        false,
        false,
        false
      >;
      "<branch": $.LinkDesc<
        $.ObjectType,
        $.Cardinality.Many,
        {},
        false,
        false,
        false,
        false
      >;
    }
>;
type $Branch = $.ObjectType<
  "sys::Branch",
  $BranchλShape,
  null,
  [
    ...$ExternalObject["__exclusives__"],
    ..._schema.$AnnotationSubject["__exclusives__"],
    {
      name: {
        __element__: _std.$str;
        __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne;
      };
    },
  ],
  "sys::Branch" | "sys::Database"
>;
const $Branch = $.makeType<$Branch>(
  _.spec,
  "2572fefc-1810-5379-bc6e-af9b8cf3943b",
  _.syntax.literal,
);

const Branch: $.$expr_PathNode<
  $.TypeSet<$Branch, $.Cardinality.Many>,
  null
> = _.syntax.$PathNode($.$toSet($Branch, $.Cardinality.Many), null);

export type $DatabaseλShape = $.typeutil.flatten<$BranchλShape & {}>;
type $Database = $.ObjectType<
  "sys::Database",
  $DatabaseλShape,
  null,
  [...$Branch["__exclusives__"]],
  "sys::Database"
>;
const $Database = $.makeType<$Database>(
  _.spec,
  "fd469647-1cf1-5702-85b6-bbdb7e7f1c7e",
  _.syntax.literal,
);

const Database: $.$expr_PathNode<
  $.TypeSet<$Database, $.Cardinality.Many>,
  null
> = _.syntax.$PathNode($.$toSet($Database, $.Cardinality.Many), null);

export type $ExtensionPackageλShape = $.typeutil.flatten<
  $SystemObjectλShape &
    _schema.$AnnotationSubjectλShape & {
      script: $.PropertyDesc<
        _std.$str,
        $.Cardinality.One,
        false,
        false,
        false,
        false
      >;
      version: $.PropertyDesc<
        $.NamedTupleType<{
          major: _std.$int64;
          minor: _std.$int64;
          stage: $VersionStage;
          stage_no: _std.$int64;
          local: $.ArrayType<_std.$str>;
        }>,
        $.Cardinality.One,
        false,
        false,
        false,
        false
      >;
      "<package[is schema::Extension]": $.LinkDesc<
        _schema.$Extension,
        $.Cardinality.AtMostOne,
        {},
        true,
        false,
        false,
        false
      >;
      "<package": $.LinkDesc<
        $.ObjectType,
        $.Cardinality.Many,
        {},
        false,
        false,
        false,
        false
      >;
    }
>;
type $ExtensionPackage = $.ObjectType<
  "sys::ExtensionPackage",
  $ExtensionPackageλShape,
  null,
  [
    ...$SystemObject["__exclusives__"],
    ..._schema.$AnnotationSubject["__exclusives__"],
  ],
  "sys::ExtensionPackage"
>;
const $ExtensionPackage = $.makeType<$ExtensionPackage>(
  _.spec,
  "87787989-1e54-5529-9cc4-524cc873528d",
  _.syntax.literal,
);

const ExtensionPackage: $.$expr_PathNode<
  $.TypeSet<$ExtensionPackage, $.Cardinality.Many>,
  null
> = _.syntax.$PathNode($.$toSet($ExtensionPackage, $.Cardinality.Many), null);

export type $ExtensionPackageMigrationλShape = $.typeutil.flatten<
  $SystemObjectλShape &
    _schema.$AnnotationSubjectλShape & {
      script: $.PropertyDesc<
        _std.$str,
        $.Cardinality.One,
        false,
        false,
        false,
        false
      >;
      from_version: $.PropertyDesc<
        $.NamedTupleType<{
          major: _std.$int64;
          minor: _std.$int64;
          stage: $VersionStage;
          stage_no: _std.$int64;
          local: $.ArrayType<_std.$str>;
        }>,
        $.Cardinality.One,
        false,
        false,
        false,
        false
      >;
      to_version: $.PropertyDesc<
        $.NamedTupleType<{
          major: _std.$int64;
          minor: _std.$int64;
          stage: $VersionStage;
          stage_no: _std.$int64;
          local: $.ArrayType<_std.$str>;
        }>,
        $.Cardinality.One,
        false,
        false,
        false,
        false
      >;
    }
>;
type $ExtensionPackageMigration = $.ObjectType<
  "sys::ExtensionPackageMigration",
  $ExtensionPackageMigrationλShape,
  null,
  [
    ...$SystemObject["__exclusives__"],
    ..._schema.$AnnotationSubject["__exclusives__"],
  ],
  "sys::ExtensionPackageMigration"
>;
const $ExtensionPackageMigration = $.makeType<$ExtensionPackageMigration>(
  _.spec,
  "e3aaabec-f88b-5fe0-b06e-cea0b3d46fa8",
  _.syntax.literal,
);

const ExtensionPackageMigration: $.$expr_PathNode<
  $.TypeSet<$ExtensionPackageMigration, $.Cardinality.Many>,
  null
> = _.syntax.$PathNode(
  $.$toSet($ExtensionPackageMigration, $.Cardinality.Many),
  null,
);

export type $QueryStatsλShape = $.typeutil.flatten<
  $ExternalObjectλShape & {
    query: $.PropertyDesc<
      _std.$str,
      $.Cardinality.AtMostOne,
      false,
      false,
      false,
      false
    >;
    query_type: $.PropertyDesc<
      $QueryType,
      $.Cardinality.AtMostOne,
      false,
      false,
      false,
      false
    >;
    tag: $.PropertyDesc<
      _std.$str,
      $.Cardinality.AtMostOne,
      false,
      false,
      false,
      false
    >;
    compilation_config: $.PropertyDesc<
      _std.$json,
      $.Cardinality.AtMostOne,
      false,
      false,
      false,
      false
    >;
    protocol_version: $.PropertyDesc<
      $.NamedTupleType<{ major: _std.$int16; minor: _std.$int16 }>,
      $.Cardinality.AtMostOne,
      false,
      false,
      false,
      false
    >;
    default_namespace: $.PropertyDesc<
      _std.$str,
      $.Cardinality.AtMostOne,
      false,
      false,
      false,
      false
    >;
    namespace_aliases: $.PropertyDesc<
      _std.$json,
      $.Cardinality.AtMostOne,
      false,
      false,
      false,
      false
    >;
    output_format: $.PropertyDesc<
      $OutputFormat,
      $.Cardinality.AtMostOne,
      false,
      false,
      false,
      false
    >;
    expect_one: $.PropertyDesc<
      _std.$bool,
      $.Cardinality.AtMostOne,
      false,
      false,
      false,
      false
    >;
    implicit_limit: $.PropertyDesc<
      _std.$int64,
      $.Cardinality.AtMostOne,
      false,
      false,
      false,
      false
    >;
    inline_typeids: $.PropertyDesc<
      _std.$bool,
      $.Cardinality.AtMostOne,
      false,
      false,
      false,
      false
    >;
    inline_typenames: $.PropertyDesc<
      _std.$bool,
      $.Cardinality.AtMostOne,
      false,
      false,
      false,
      false
    >;
    inline_objectids: $.PropertyDesc<
      _std.$bool,
      $.Cardinality.AtMostOne,
      false,
      false,
      false,
      false
    >;
    plans: $.PropertyDesc<
      _std.$int64,
      $.Cardinality.AtMostOne,
      false,
      false,
      false,
      false
    >;
    total_plan_time: $.PropertyDesc<
      _std.$duration,
      $.Cardinality.AtMostOne,
      false,
      false,
      false,
      false
    >;
    min_plan_time: $.PropertyDesc<
      _std.$duration,
      $.Cardinality.AtMostOne,
      false,
      false,
      false,
      false
    >;
    max_plan_time: $.PropertyDesc<
      _std.$duration,
      $.Cardinality.AtMostOne,
      false,
      false,
      false,
      false
    >;
    mean_plan_time: $.PropertyDesc<
      _std.$duration,
      $.Cardinality.AtMostOne,
      false,
      false,
      false,
      false
    >;
    stddev_plan_time: $.PropertyDesc<
      _std.$duration,
      $.Cardinality.AtMostOne,
      false,
      false,
      false,
      false
    >;
    calls: $.PropertyDesc<
      _std.$int64,
      $.Cardinality.AtMostOne,
      false,
      false,
      false,
      false
    >;
    total_exec_time: $.PropertyDesc<
      _std.$duration,
      $.Cardinality.AtMostOne,
      false,
      false,
      false,
      false
    >;
    min_exec_time: $.PropertyDesc<
      _std.$duration,
      $.Cardinality.AtMostOne,
      false,
      false,
      false,
      false
    >;
    max_exec_time: $.PropertyDesc<
      _std.$duration,
      $.Cardinality.AtMostOne,
      false,
      false,
      false,
      false
    >;
    mean_exec_time: $.PropertyDesc<
      _std.$duration,
      $.Cardinality.AtMostOne,
      false,
      false,
      false,
      false
    >;
    stddev_exec_time: $.PropertyDesc<
      _std.$duration,
      $.Cardinality.AtMostOne,
      false,
      false,
      false,
      false
    >;
    rows: $.PropertyDesc<
      _std.$int64,
      $.Cardinality.AtMostOne,
      false,
      false,
      false,
      false
    >;
    stats_since: $.PropertyDesc<
      _std.$datetime,
      $.Cardinality.AtMostOne,
      false,
      false,
      false,
      false
    >;
    minmax_stats_since: $.PropertyDesc<
      _std.$datetime,
      $.Cardinality.AtMostOne,
      false,
      false,
      false,
      false
    >;
    branch: $.LinkDesc<
      $Branch,
      $.Cardinality.AtMostOne,
      {},
      false,
      false,
      false,
      false
    >;
  }
>;
type $QueryStats = $.ObjectType<
  "sys::QueryStats",
  $QueryStatsλShape,
  null,
  [...$ExternalObject["__exclusives__"]],
  "sys::QueryStats"
>;
const $QueryStats = $.makeType<$QueryStats>(
  _.spec,
  "ce92490c-1d17-5950-8bdd-cf9e23817551",
  _.syntax.literal,
);

const QueryStats: $.$expr_PathNode<
  $.TypeSet<$QueryStats, $.Cardinality.Many>,
  null
> = _.syntax.$PathNode($.$toSet($QueryStats, $.Cardinality.Many), null);

export type $RoleλShape = $.typeutil.flatten<
  $SystemObjectλShape &
    _schema.$InheritingObjectλShape &
    _schema.$AnnotationSubjectλShape & {
      name: $.PropertyDesc<
        _std.$str,
        $.Cardinality.One,
        true,
        false,
        false,
        false
      >;
      superuser: $.PropertyDesc<
        _std.$bool,
        $.Cardinality.One,
        false,
        false,
        false,
        false
      >;
      is_superuser: $.PropertyDesc<
        _std.$bool,
        $.Cardinality.One,
        false,
        true,
        false,
        false
      >;
      password: $.PropertyDesc<
        _std.$str,
        $.Cardinality.AtMostOne,
        false,
        false,
        false,
        false
      >;
      member_of: $.LinkDesc<
        $Role,
        $.Cardinality.Many,
        {},
        false,
        false,
        false,
        false
      >;
      "<member_of[is sys::Role]": $.LinkDesc<
        $Role,
        $.Cardinality.Many,
        {},
        false,
        false,
        false,
        false
      >;
      "<member_of": $.LinkDesc<
        $.ObjectType,
        $.Cardinality.Many,
        {},
        false,
        false,
        false,
        false
      >;
    }
>;
type $Role = $.ObjectType<
  "sys::Role",
  $RoleλShape,
  null,
  [
    ...$SystemObject["__exclusives__"],
    ..._schema.$InheritingObject["__exclusives__"],
    ..._schema.$AnnotationSubject["__exclusives__"],
    {
      name: {
        __element__: _std.$str;
        __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne;
      };
    },
  ],
  "sys::Role"
>;
const $Role = $.makeType<$Role>(
  _.spec,
  "04d3804d-c37f-5969-86b2-a24309653b14",
  _.syntax.literal,
);

const Role: $.$expr_PathNode<
  $.TypeSet<$Role, $.Cardinality.Many>,
  null
> = _.syntax.$PathNode($.$toSet($Role, $.Cardinality.Many), null);

type reset_query_statsλFuncExpr<
  NamedArgs extends {
    branch_name?: _.castMaps.orScalarLiteral<$.TypeSet<_std.$str>>;
    id?: _.castMaps.orScalarLiteral<$.TypeSet<_std.$uuid>>;
    minmax_only?: _.castMaps.orScalarLiteral<$.TypeSet<_std.$bool>>;
  },
> = $.$expr_Function<
  _std.$datetime,
  $.cardutil.overrideLowerBound<
    $.cardutil.multiplyCardinalities<
      $.cardutil.multiplyCardinalities<
        $.cardutil.optionalParamCardinality<NamedArgs["branch_name"]>,
        $.cardutil.optionalParamCardinality<NamedArgs["id"]>
      >,
      $.cardutil.optionalParamCardinality<NamedArgs["minmax_only"]>
    >,
    "Zero"
  >
>;
/**
 * Discard query statistics gathered so far corresponding to the specified `branch_name` and `id`. If either of the parameters is not specified, the statistics that match with the other parameter will be reset. If no parameter is specified, it will discard all statistics. When `minmax_only` is `true`, only the values of minimum and maximum planning and execution time will be reset (i.e. `min_plan_time`, `max_plan_time`, `min_exec_time` and `max_exec_time` fields). The default value for `minmax_only` parameter is `false`. This function returns the time of a reset. This time is saved to `stats_reset` or `minmax_stats_since` field of `sys::QueryStats` if the corresponding reset was actually performed.
 */
function reset_query_stats<
  NamedArgs extends {
    branch_name?: _.castMaps.orScalarLiteral<$.TypeSet<_std.$str>>;
    id?: _.castMaps.orScalarLiteral<$.TypeSet<_std.$uuid>>;
    minmax_only?: _.castMaps.orScalarLiteral<$.TypeSet<_std.$bool>>;
  },
>(namedArgs: NamedArgs): reset_query_statsλFuncExpr<NamedArgs>;
function reset_query_stats(...args: any[]) {
  const {
    returnType,
    cardinality,
    args: positionalArgs,
    namedArgs,
  } = _.syntax.$resolveOverload("sys::reset_query_stats", args, _.spec, [
    {
      args: [],
      namedArgs: {
        branch_name: {
          typeId: "00000000-0000-0000-0000-000000000101",
          optional: true,
          setoftype: false,
          variadic: false,
        },
        id: {
          typeId: "00000000-0000-0000-0000-000000000100",
          optional: true,
          setoftype: false,
          variadic: false,
        },
        minmax_only: {
          typeId: "00000000-0000-0000-0000-000000000109",
          optional: true,
          setoftype: false,
          variadic: false,
        },
      },
      returnTypeId: "00000000-0000-0000-0000-00000000010a",
      returnTypemod: "OptionalType",
    },
  ]);
  return _.syntax.$expressionify({
    __kind__: $.ExpressionKind.Function,
    __element__: returnType,
    __cardinality__: cardinality,
    __name__: "sys::reset_query_stats",
    __args__: positionalArgs,
    __namedargs__: namedArgs,
  }) as any;
}

type get_versionλFuncExpr = $.$expr_Function<
  $.NamedTupleType<{
    major: _std.$int64;
    minor: _std.$int64;
    stage: $VersionStage;
    stage_no: _std.$int64;
    local: $.ArrayType<_std.$str>;
  }>,
  $.Cardinality.One
>;
/**
 * Return the server version as a tuple.
 */
function get_version(): get_versionλFuncExpr;
function get_version(...args: any[]) {
  const {
    returnType,
    cardinality,
    args: positionalArgs,
    namedArgs,
  } = _.syntax.$resolveOverload("sys::get_version", args, _.spec, [
    { args: [], returnTypeId: "48a4615d-2402-5744-bd11-17015ad18bb9" },
  ]);
  return _.syntax.$expressionify({
    __kind__: $.ExpressionKind.Function,
    __element__: returnType,
    __cardinality__: cardinality,
    __name__: "sys::get_version",
    __args__: positionalArgs,
    __namedargs__: namedArgs,
  }) as any;
}

type get_version_as_strλFuncExpr = $.$expr_Function<
  _std.$str,
  $.Cardinality.One
>;
/**
 * Return the server version as a string.
 */
function get_version_as_str(): get_version_as_strλFuncExpr;
function get_version_as_str(...args: any[]) {
  const {
    returnType,
    cardinality,
    args: positionalArgs,
    namedArgs,
  } = _.syntax.$resolveOverload("sys::get_version_as_str", args, _.spec, [
    { args: [], returnTypeId: "00000000-0000-0000-0000-000000000101" },
  ]);
  return _.syntax.$expressionify({
    __kind__: $.ExpressionKind.Function,
    __element__: returnType,
    __cardinality__: cardinality,
    __name__: "sys::get_version_as_str",
    __args__: positionalArgs,
    __namedargs__: namedArgs,
  }) as any;
}

type get_instance_nameλFuncExpr = $.$expr_Function<
  _std.$str,
  $.Cardinality.One
>;
/**
 * Return the server instance name.
 */
function get_instance_name(): get_instance_nameλFuncExpr;
function get_instance_name(...args: any[]) {
  const {
    returnType,
    cardinality,
    args: positionalArgs,
    namedArgs,
  } = _.syntax.$resolveOverload("sys::get_instance_name", args, _.spec, [
    { args: [], returnTypeId: "00000000-0000-0000-0000-000000000101" },
  ]);
  return _.syntax.$expressionify({
    __kind__: $.ExpressionKind.Function,
    __element__: returnType,
    __cardinality__: cardinality,
    __name__: "sys::get_instance_name",
    __args__: positionalArgs,
    __namedargs__: namedArgs,
  }) as any;
}

type get_transaction_isolationλFuncExpr = $.$expr_Function<
  $TransactionIsolation,
  $.Cardinality.One
>;
/**
 * Return the isolation level of the current transaction.
 */
function get_transaction_isolation(): get_transaction_isolationλFuncExpr;
function get_transaction_isolation(...args: any[]) {
  const {
    returnType,
    cardinality,
    args: positionalArgs,
    namedArgs,
  } = _.syntax.$resolveOverload(
    "sys::get_transaction_isolation",
    args,
    _.spec,
    [{ args: [], returnTypeId: "070715f3-0100-5580-9473-696f961243eb" }],
  );
  return _.syntax.$expressionify({
    __kind__: $.ExpressionKind.Function,
    __element__: returnType,
    __cardinality__: cardinality,
    __name__: "sys::get_transaction_isolation",
    __args__: positionalArgs,
    __namedargs__: namedArgs,
  }) as any;
}

type get_current_databaseλFuncExpr = $.$expr_Function<
  _std.$str,
  $.Cardinality.One
>;
/**
 * Return the name of the current database branch as a string.
 */
function get_current_database(): get_current_databaseλFuncExpr;
function get_current_database(...args: any[]) {
  const {
    returnType,
    cardinality,
    args: positionalArgs,
    namedArgs,
  } = _.syntax.$resolveOverload("sys::get_current_database", args, _.spec, [
    { args: [], returnTypeId: "00000000-0000-0000-0000-000000000101" },
  ]);
  return _.syntax.$expressionify({
    __kind__: $.ExpressionKind.Function,
    __element__: returnType,
    __cardinality__: cardinality,
    __name__: "sys::get_current_database",
    __args__: positionalArgs,
    __namedargs__: namedArgs,
  }) as any;
}

type get_current_branchλFuncExpr = $.$expr_Function<
  _std.$str,
  $.Cardinality.One
>;
/**
 * Return the name of the current database branch as a string.
 */
function get_current_branch(): get_current_branchλFuncExpr;
function get_current_branch(...args: any[]) {
  const {
    returnType,
    cardinality,
    args: positionalArgs,
    namedArgs,
  } = _.syntax.$resolveOverload("sys::get_current_branch", args, _.spec, [
    { args: [], returnTypeId: "00000000-0000-0000-0000-000000000101" },
  ]);
  return _.syntax.$expressionify({
    __kind__: $.ExpressionKind.Function,
    __element__: returnType,
    __cardinality__: cardinality,
    __name__: "sys::get_current_branch",
    __args__: positionalArgs,
    __namedargs__: namedArgs,
  }) as any;
}

export {
  OutputFormat,
  QueryType,
  TransactionAccessMode,
  TransactionDeferrability,
  TransactionIsolation,
  VersionStage,
  $SystemObject,
  SystemObject,
  $ExternalObject,
  ExternalObject,
  $Branch,
  Branch,
  $Database,
  Database,
  $ExtensionPackage,
  ExtensionPackage,
  $ExtensionPackageMigration,
  ExtensionPackageMigration,
  $QueryStats,
  QueryStats,
  $Role,
  Role,
};

type __defaultExports = {
  OutputFormat: typeof OutputFormat;
  QueryType: typeof QueryType;
  TransactionAccessMode: typeof TransactionAccessMode;
  TransactionDeferrability: typeof TransactionDeferrability;
  TransactionIsolation: typeof TransactionIsolation;
  VersionStage: typeof VersionStage;
  SystemObject: typeof SystemObject;
  ExternalObject: typeof ExternalObject;
  Branch: typeof Branch;
  Database: typeof Database;
  ExtensionPackage: typeof ExtensionPackage;
  ExtensionPackageMigration: typeof ExtensionPackageMigration;
  QueryStats: typeof QueryStats;
  Role: typeof Role;
  reset_query_stats: typeof reset_query_stats;
  get_version: typeof get_version;
  get_version_as_str: typeof get_version_as_str;
  get_instance_name: typeof get_instance_name;
  get_transaction_isolation: typeof get_transaction_isolation;
  get_current_database: typeof get_current_database;
  get_current_branch: typeof get_current_branch;
};
const __defaultExports: __defaultExports = {
  OutputFormat: OutputFormat,
  QueryType: QueryType,
  TransactionAccessMode: TransactionAccessMode,
  TransactionDeferrability: TransactionDeferrability,
  TransactionIsolation: TransactionIsolation,
  VersionStage: VersionStage,
  SystemObject: SystemObject,
  ExternalObject: ExternalObject,
  Branch: Branch,
  Database: Database,
  ExtensionPackage: ExtensionPackage,
  ExtensionPackageMigration: ExtensionPackageMigration,
  QueryStats: QueryStats,
  Role: Role,
  reset_query_stats: reset_query_stats,
  get_version: get_version,
  get_version_as_str: get_version_as_str,
  get_instance_name: get_instance_name,
  get_transaction_isolation: get_transaction_isolation,
  get_current_database: get_current_database,
  get_current_branch: get_current_branch,
};
export default __defaultExports;
